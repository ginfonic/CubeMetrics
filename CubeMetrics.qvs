//CubeMetrics
//Сохраняет модель данных в QVD
sub cbmStoreModel(data_dir, qvd_dir, refs_dir, target, use_db)
	let cbmConnection = use_db;
	call cbmCreateModel('$(qvd_dir)/db_task.qvd', '$(data_dir)/rmx_tasks.xlsx', '$(qvd_dir)/db_ubasket.qvd', '$(data_dir)/fbs_data.xlsx', '$(qvd_dir)/db_products.qvd', '$(data_dir)/ptb_prd.xlsx', '$(data_dir)/fbs_milestone.xlsx', '$(qvd_dir)/db_q_monitors.qvd', '$(data_dir)/trf_data.xlsx', '$(qvd_dir)/hr.qvd', '$(data_dir)/trf_hr.xlsx', '$(qvd_dir)/IIcom23.qvd', '$(data_dir)/cbm_ai.xlsx', '$(qvd_dir)/r.org.qvd', '$(refs_dir)/r.org.xlsx');
	exit sub unless ETL_STEP_ERROR_CODE = 0;
	call storeTemp('cbm_data', target&'_data');
	exit sub unless ETL_STEP_ERROR_CODE = 0;
	drop table cbm_data;
  $(mExitSubOnStepError);
end sub;

// Сливает метрику с основной таблицей
sub cbmMergeMetric(metric_code)
	concatenate(cbm_data) load
		org_code,
		cbm_fbs.TBCode as cbm.TBCode,
		cbm_fbs.GOSBCode as cbm.GOSBCode,
		cbm_fbs.TBName as cbm.TBName,
		cbm_fbs.GOSBName as cbm.GOSBName,
		cbm_fbs.MetricID as cbm.MetricID,
		cbm_fbs.MetricName as cbm.MetricName,
		cbm_fbs.MetricDirection as cbm.MetricDirection,
		cbm_fbs.MetricPlanValue as cbm.MetricPlanValue,
		cbm_fbs.ElementType as cbm.ElementType, 
		cbm_fbs.ElementID as cbm.ElementID,
		cbm_fbs.Segment as cbm.Segment,
		cbm_fbs.ReportDate as cbm.ReportDate,
		cbm_fbs.StructLevel as cbm.StructLevel,
		cbm_fbs.DevElementName as cbm.DevElementName,
		cbm_fbs.MetricValue as cbm.MetricValue,
		cbm_fbs.ResultEvaluation as cbm.ResultEvaluation,
		cbm_fbs.DeviationMarker as cbm.DeviationMarker,
		cbm_fbs.LoadID as cbm.LoadID
	resident cbm_fbs_$(metric_code);
	drop table cbm_fbs_$(metric_code); 
end sub;

//Создает модель данных
sub cbmCreateModel(tasks_qvd, tasks_xl, fbs_qvd, fbs_xl, fbs_prd_qvd, fbs_prd_xl, fbs_mls_xl, trf_qvd, trf_xl, trf_hr_qvd, trf_hr_xl, cbm_ai_qvd, cbm_ai_xl, org_qvd, org_xl)
	// Дата расчета
	let v_cbmToday = Today(); //'31.07.2023';

	// Выражения расчета необходимых дат
	set cbmGetPrevMStart = MonthStart(AddMonths('$(v_cbmToday)', -1));
	set cbmGetPrevMEnd = MonthEnd(AddMonths('$(v_cbmToday)', -1));
	set cbmGetPrevQStart = QuarterStart(AddMonths('$(v_cbmToday)', -3));
	set cbmGetPrevQEnd = QuarterEnd(AddMonths('$(v_cbmToday)', -3));

	// Таблица инициатив
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_data:
		noconcatenate load
			tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
			id as cbm.ID,
			If((id = 3193) or (id = 2001), 'Региональные проекты', DIRECTION) as cbm.Direction,
			title as cbm.Title,
			Date(Date#(control_date, 'DD-MM-YYYY')) as cbm.ControlDate,
			Date(Date#(create_date, 'DD-MM-YYYY')) as cbm.CreateDate,
			STATUS as cbm.Status,
			If((Upper(STATUS) = 'ЗАВЕРШЕНА') or (Upper(STATUS) = 'ОТМЕНЕНА'), 
				If((Upper(STATUS) = 'ОТМЕНЕНА') or (Month(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) >= 4),
					Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))),
					Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) - 1
				), 
				Year(Now())
			) as cbm.YearReport
		from [$(tasks_qvd)] (qvd)
		where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
			((Upper(STATUS) <> 'ОТМЕНЕНА') or ((Upper(STATUS) = 'ОТМЕНЕНА') and (cause = '3')));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		cbm_data:
		noconcatenate load
			tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
			id as cbm.ID,
			If((id = 3193) or (id = 2001), 'Региональные проекты', DIRECTION) as cbm.Direction,
			title as cbm.Title,
			Date(Date#(control_date, 'DD-MM-YYYY')) as cbm.ControlDate,
			Date(Date#(create_date, 'DD-MM-YYYY')) as cbm.CreateDate,
			STATUS as cbm.Status,
			If((Upper(STATUS) = 'ЗАВЕРШЕНА') or (Upper(STATUS) = 'ОТМЕНЕНА'), 
				If((Upper(STATUS) = 'ОТМЕНЕНА') or (Month(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) >= 4),
					Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))),
					Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) - 1
				), 
				Year(Now())
			) as cbm.YearReport
		from [$(tasks_xl)] (ooxml, embedded labels, table is Sheet1)
		where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
			((Upper(STATUS) <> 'ОТМЕНЕНА') or ((Upper(STATUS) = 'ОТМЕНЕНА') and (cause = '3')));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Таблица отмененных инициатив
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_data_cancel:
		noconcatenate load
			tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
			id as cbm.ID,
			DIRECTION as cbm.Direction,
			title as cbm.Title,
			Date(Date#(control_date, 'DD-MM-YYYY') ) as cbm.ControlDate,
			Date(Date#(create_date, 'DD-MM-YYYY') ) as cbm.CreateDate,
			STATUS as cbm.Status,
			Year(Now()) as cbm.YearReport
		from [$(tasks_qvd)] (qvd)
		where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
			(Upper(STATUS) = 'ОТМЕНЕНА') and (DIRECTION = 'Бизнес идеи (КРП)');

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else 
		//Excel
		cbm_data_cancel:
		noconcatenate load
			tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
			id as cbm.ID,
			DIRECTION as cbm.Direction,
			title as cbm.Title,
			Date(Date#(control_date, 'DD-MM-YYYY') ) as cbm.ControlDate,
			Date(Date#(create_date, 'DD-MM-YYYY') ) as cbm.CreateDate,
			STATUS as cbm.Status,
			Year(Now()) as cbm.YearReport
		from [$(tasks_xl)] (ooxml, embedded labels, table is Sheet1)
		where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
			(Upper(STATUS) = 'ОТМЕНЕНА') and (DIRECTION = 'Бизнес идеи (КРП)');

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Шаблон метрик
	cbm_metrics_lookup:
	noconcatenate load * inline [
		cbm.MetricID, cbm.MetricName, cbm.MetricDirection, cbm.MetricPlanValue
		10000015, PL комплексных региональных проектов на текущий год, 1, 1.3
		10000016, Идеи КРП со сроком жизни больше 60 календарных дней, 2, 0
		10000017, Доля нереализованных идей КРП, 2, 0
		10000018, Достаточность КРП для выполнения плана, 1, 1
		10000019, PL комплексных региональных проектов на следующий год, 1, 0.7
		10000020, Низкое количество идей КРП на ГОСБ, 1, 0
  ];

	// Добавляет метрики к таблице инициатив
	join(cbm_data) load * 
	resident cbm_metrics_lookup
	where cbm.MetricID <> 10000017;

	// Добавляет метрики к таблице отмененных инициатив
	join(cbm_data_cancel) load * 
	resident cbm_metrics_lookup
	where cbm.MetricID = 10000017;

	// Сливает таблицу отмененных инициатив с таблицей инициатив
	concatenate(cbm_data) load *
	resident cbm_data_cancel;
	drop table cbm_data_cancel;

	// Создает таблицу команды из таблицы инициатив
	cbm_stuff:
	noconcatenate load
		org_code, 
		cbm.MetricID,
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue,
		// Поля для расчета
		cbm.ID,
		cbm.Status,
		cbm.Direction,
		cbm.YearReport,
		cbm.ControlDate,
		cbm.CreateDate
	resident cbm_data;

	// Загружает таблицу оргкодов
	if '$(cbmConnection)' = '1' then
		//QVD
		org:
		noconcatenate load distinct 
			org_code,
			org_tb_code,
			org_gosb_code,
			org_tb_name,
			org_gosb_name,
			org_cluster
		from [$(org_qvd)] (qvd)
		where (org_tb_code <> 38) and (org_gosb_code <> 9052);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		org:
		noconcatenate load distinct 
			org_code,
			$(ggffT2N(org_tb_code)) as org_tb_code,
			$(ggffT2N(org_gosb_code)) as org_gosb_code,
			$(ggffT2N(org_tb_name)) as org_tb_name,
			$(ggffT2N(org_gosb_name)) as org_gosb_name,
			$(ggffT2N(org_cluster)) as org_cluster
		from [$(org_xl)] (ooxml, embedded labels, table is Sheet1)
		where (org_tb_code <> 38) and (org_gosb_code <> 9052);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет к таблице команды данные из таблицы оргкодов
	left join (cbm_stuff) load
		org_code,
		org_tb_code,
		org_gosb_code,
		If(IsNull(org_cluster), 'Без группы', org_cluster) as org_cluster
	resident org;

	// Ориентир, исходя из кластера ГОСБ
	set cbmGetClusterMilestone = Pick(Match(org_cluster, 'Группа 1', 'Группа 2', 'Группа 3', 'Группа 4', 'Группа 5') + 1, 0, 4, 3, 2, 2, 1);

	// Для первых 5 метрик группирует по ГОСБ с кластером и метрике в первую таблицу
	temp1:
	noconcatenate load
		org_code, 
		org_cluster,
		cbm.MetricID,
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue, 
		// Значение метрики
		Pick(Match(cbm.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019),
			//10000015
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе') or 
					(cbm.Status = 'Бизнес экспертиза') or (cbm.Status = 'Бизнес экспертиза завершена') or 
					(cbm.Status = 'Финансовая экспертиза') or (cbm.Status = 'Финансовая экспертиза завершена') or 
					(cbm.Status = 'Согласование проекта на РГ') or (cbm.Status = 'Согласование закрытия проекта')
				) and
				((cbm.Direction = 'КРП') or (cbm.Direction = 'Бизнес идеи (КРП)') or 
					(cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')
				) and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000016
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'Бизнес идеи (КРП)') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024') and 
				(cbm.CreateDate < Date('$(v_cbmToday)' - 60)),
				cbm.ID
			)),
			//10000017
			Count(If(
				(cbm.Status = 'Отменена') and
				(cbm.Direction = 'Бизнес идеи (КРП)') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000018
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				((cbm.Direction = 'КРП') or (cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')) and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000019
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				((cbm.Direction = 'КРП') or (cbm.Direction = 'Бизнес идеи (КРП)') or 
					(cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')) and
				(cbm.YearReport = 2023) and
				((cbm.ControlDate >= '02.02.2024') and (cbm.ControlDate < '02.02.2025')),
				cbm.ID
			)) /
			$(cbmGetClusterMilestone)
		) as cbm.MetricValue,
		// Комментарий
		Pick(Match(cbm.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019),
			//10000015
			'1)	Количество идей КРП на текущий год: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'Бизнес идеи (КРП)') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП, реализуемых в текущем году: ' &
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе') or 
					(cbm.Status = 'Бизнес экспертиза') or (cbm.Status = 'Бизнес экспертиза завершена') or 
					(cbm.Status = 'Финансовая экспертиза') or (cbm.Status = 'Финансовая экспертиза завершена') or 
					(cbm.Status = 'Согласование проекта на РГ') or (cbm.Status = 'Согласование закрытия проекта')
				) and
				(cbm.Direction = 'КРП') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'3)	Количество бизнес-экспериментов, реализуемых в текущем году: ' &
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				(cbm.Direction = 'Бизнес-эксперименты') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'4)	Количество ИИ-трансформаций, реализуемых в текущем году: ' &
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				(cbm.Direction = 'ИИ-трансформация') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'5)	Ориентир КРП на текущий год: ' & $(cbmGetClusterMilestone) &' шт.',
			//10000016
			Null(),
			//10000017
			Null(),
			//10000018
			'1)	Количество КРП, реализуемых в текущем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'КРП') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП, завершенных в текущем году: ' &
			Count(If(
				(cbm.Status = 'Завершена') and
				(cbm.Direction = 'КРП') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'3)	Количество бизнес-экспериментов, реализуемых в текущем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'Бизнес-эксперименты') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'4)	Количество бизнес-экспериментов, завершенных в текущем году: ' &
			Count(If(
				(cbm.Status = 'Завершена') and
				(cbm.Direction = 'Бизнес-эксперименты') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'5)	Количество ИИ-трансформаций, реализуемых в текущем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'ИИ-трансформация') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'6)	Количество ИИ-трансформаций, завершенных в текущем году: ' &
			Count(If(
				(cbm.Status = 'Завершена') and
				(cbm.Direction = 'ИИ-трансформация') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'7)	Ориентир КРП на текущий год: ' & $(cbmGetClusterMilestone) &' шт.',
			//10000019
			'1)	Количество идей КРП на следующий год: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'Бизнес идеи (КРП)') and
				(cbm.YearReport = 2023) and
				((cbm.ControlDate >= '02.02.2024') and (cbm.ControlDate < '02.02.2025')),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП, реализуемых в следующем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'КРП') and
				(cbm.YearReport = 2023) and
				((cbm.ControlDate >= '02.02.2024') and (cbm.ControlDate < '02.02.2025')),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'3)	Количество бизнес-экспериментов, реализуемых в следующем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'Бизнес-эксперименты') and
				(cbm.YearReport = 2023) and
				((cbm.ControlDate >= '02.02.2024') and (cbm.ControlDate < '02.02.2025')),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'4)	Количество ИИ-трансформаций, реализуемых в следующем году: ' &
			Count(If(
				(cbm.Status = 'В работе') and
				(cbm.Direction = 'ИИ-трансформация') and
				(cbm.YearReport = 2023) and
				((cbm.ControlDate >= '02.02.2024') and (cbm.ControlDate < '02.02.2025')),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'5)	Ориентир КРП на текущий год: ' & 
			$(cbmGetClusterMilestone) & ' шт. (считаем, что план на следующий год равен текущему)'
		) as cbm.DevElementName
	resident cbm_stuff
	where not(IsNull(org_gosb_code)) and (cbm.MetricID <> 10000020)
	group by org_code, org_cluster, cbm.MetricID, cbm.MetricName, cbm.MetricDirection, cbm.MetricPlanValue;

	// Для шестой метрики группирует по ТБ во вторую таблицу
	temp2:
	noconcatenate load
		org_tb_code, 
		cbm.MetricID, 
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue, 
		// Значение метрики 10000020
		(
			Count(If(
				((cbm.Status =  'Завершена') or (cbm.Status = 'В работе')) and
				((cbm.Direction = 'КРП') or (cbm.Direction = 'Бизнес идеи (КРП)')) and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) / 
			// Считает только коды ГОСБ
			Count(distinct org_gosb_code)
		) as cbm.MetricValue,
		// Комментарий метрики 10000020
		(
			'1)	Количество идей КРП на текущий год: ' &
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				(cbm.Direction = 'Бизнес идеи (КРП)') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП в текущем году в статусе "В работе" и "Завершена": '&
			Count(If(
				((cbm.Status = 'Завершена') or (cbm.Status = 'В работе')) and
				(cbm.Direction = 'КРП') and
				(cbm.YearReport = 2023) and
				(cbm.ControlDate < '02.02.2024'),
				cbm.ID
			)) & ' шт. '& chr(13) &
			'3)	ГОСБ: ' & 
			Count(distinct org_gosb_code) & ' шт.'
		) as cbm.DevElementName,
		org_tb_code as org_code
	resident cbm_stuff
	where not(IsNull(org_tb_code)) and (cbm.MetricID = 10000020)
	group by org_tb_code, cbm.MetricID, cbm.MetricName, cbm.MetricDirection, cbm.MetricPlanValue;
	drop table cbm_stuff;
	rename table temp1 to cbm_stuff;

	// Сливает обе таблицы в готовую таблицу команды
	concatenate(cbm_stuff) load
		org_code,
		cbm.MetricID, 
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue,
		cbm.MetricValue,
		cbm.DevElementName
	resident temp2;
	drop table temp2;

	// Создает матрицу ТБ/ГОСБ
	cbm_mtx:
	noconcatenate load 
		org_code
	resident org
	where not IsNull(org_tb_code);

	// Добавляет к матрице метрики
	join(cbm_mtx) load 
		cbm.MetricID, 
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue
	resident cbm_metrics_lookup;
	drop table cbm_metrics_lookup;

	// Добавляет к таблице команды нужную часть матрицы
	concatenate(cbm_stuff) load * resident cbm_mtx
	where ((Len(org_code) > 2) and (cbm.MetricID <> 10000020)) or 
		((Len(org_code) = 2) and (cbm.MetricID = 10000020));
	drop table cbm_mtx;

	// Сливает таблицу команды с матрицей
	temp:
	noconcatenate load
		org_code, 
		cbm.MetricID, 
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue, 
		Sum(cbm.MetricValue) as cbm.MetricValue,
		Only(cbm.DevElementName) as cbm.DevElementName
	resident cbm_stuff
	group by org_code, cbm.MetricID, cbm.MetricName, cbm.MetricDirection, cbm.MetricPlanValue;
	drop table cbm_stuff;
	rename table temp to cbm_stuff;

	// Убирает из таблицы инициатив записи с пустым DevElementTitle
	temp:
	noconcatenate load * where not(IsNull(cbm.DevElementName));
	// Добавляет в таблицу инициатив нужные поля, удаляя ненужные
	noconcatenate load
		org_code,
		cbm.MetricID, 
		cbm.MetricName, 
		cbm.MetricDirection, 
		cbm.MetricPlanValue, 
		'ELEMENT' as cbm.StructLevel,
		// Имя элемента
		Pick(Match(cbm.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019),
			//10000015
			If(((cbm.Direction = 'Бизнес идеи (КРП)') or (cbm.Direction = 'КРП') or
						(cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')
					) and 
					((cbm.Status = 'В работе') or (cbm.Status = 'Завершена') or 
						(cbm.Status = 'Бизнес экспертиза') or (cbm.Status = 'Бизнес экспертиза завершена') or 
						(cbm.Status = 'Финансовая экспертиза') or (cbm.Status = 'Финансовая экспертиза завершена') or 
						(cbm.Status = 'Согласование проекта на РГ') or (cbm.Status = 'Согласование закрытия проекта')
					) and 
					(cbm.YearReport = '2023') and (cbm.ControlDate < Date('02.02.2024')),
				cbm.Direction & ': ' & cbm.Title & ', срок: ' & cbm.ControlDate & ', статус: ' & cbm.Status
			),
			//10000016
			If((cbm.Direction = 'Бизнес идеи (КРП)') and (cbm.Status = 'В работе') and 
					(cbm.YearReport = '2023') and (cbm.ControlDate < Date('02.02.2024')) and 
					(cbm.CreateDate < Date('$(v_cbmToday)' - 60)),
				cbm.Title & ', дата создания: ' & cbm.CreateDate & ' (в ожидании ' & ('$(v_cbmToday)' - cbm.CreateDate) & ' дн.)'),
			//10000017
			If((cbm.Direction = 'Бизнес идеи (КРП)') and (cbm.Status = 'Отменена') and 
					(cbm.YearReport = '2023') and (cbm.ControlDate < Date('02.02.2024')),
				cbm.Direction & ': ' & cbm.Title & ', срок: ' & cbm.ControlDate & ', статус: ' & cbm.Status),
			//10000018
			If(((cbm.Direction = 'КРП') or (cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')) and 
					((cbm.Status = 'В работе') or (cbm.Status = 'Завершена')) and 
					(cbm.YearReport = '2023') and (cbm.ControlDate < Date('02.02.2024')),
				cbm.Direction & ': '& cbm.Title & ', срок: ' & cbm.ControlDate & ', статус: ' & cbm.Status),
			//10000019
			If(((cbm.Direction = 'Бизнес идеи (КРП)') or (cbm.Direction = 'КРП') or 
						(cbm.Direction = 'Бизнес-эксперименты') or (cbm.Direction = 'ИИ-трансформация')
					) and 
					((cbm.Status = 'В работе') or (cbm.Status = 'Завершена')) and 
					(cbm.YearReport = '2023') and (cbm.ControlDate > Date('02.02.2024')) and (cbm.ControlDate < Date('02.02.2025')),
				cbm.Direction & ': ' & cbm.Title & ', срок: ' & cbm.ControlDate & ', статус: ' & cbm.Status)
		) as cbm.DevElementName
	resident cbm_data;
	drop table cbm_data;
	rename table temp to cbm_data;

	// Добавляет в таблицу инициатив значение и единицу измерения метрики из таблицы команды
	left join(cbm_data) load
		org_code,
		cbm.MetricID,
		cbm.MetricValue
	resident cbm_stuff;

	// Сливает таблицу команды с таблицей инициатив
	concatenate(cbm_data) load *, 
		'STUFF' as cbm.StructLevel
	resident cbm_stuff;
	drop table cbm_stuff;

	// Расчитывает значение перцентилей 0,75 и 0,25
	left join(cbm_data) load
		cbm.MetricID,
		Fractile(cbm.MetricValue, 0.75) as cbm.Percentile75,
		Fractile(cbm.MetricValue, 0.25) as cbm.Percentile25
	resident cbm_data
	where (
		(cbm.StructLevel = 'STUFF') and 
		(
			((cbm.MetricID = 10000015) and (cbm.MetricValue >= cbm.MetricPlanValue)) or 
			((cbm.MetricID = 10000017) and (cbm.MetricValue > cbm.MetricPlanValue)) or 
			((cbm.MetricID = 10000018) and (cbm.MetricValue >= cbm.MetricPlanValue)) or 
			((cbm.MetricID = 10000019) and (cbm.MetricValue >= cbm.MetricPlanValue)) or
			(cbm.MetricID = 10000020)
		)
	)
	group by cbm.MetricID;

	temp:
	noconcatenate load *,
		// Добавляет пустые и стандартные поля
		Null() as cbm.ElementType, 
		Null() as cbm.ElementID,
		'EXT_FILE' as cbm.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm.ReportDate,
		// Рассчитывает поле LOAD_ID из метрики и текущей даты
		If((cbm.MetricID = 10000018) or (cbm.MetricID = 10000019),
			cbm.MetricID&'_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD'),
			cbm.MetricID&'_'&Date($(cbmGetPrevMStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevMEnd), 'YYYYMMDD')
		) as cbm.LoadID, 
		// Рассчитывает поле DEVIATION_MARKER
		If(not $(ggffIsEmpty(cbm.MetricValue)),
			Pick(Match(cbm.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019, 10000020), 
				// 10000015
				If((cbm.MetricValue < cbm.MetricPlanValue), 
					1, 
					If((cbm.MetricValue > cbm.Percentile75),
						13,
						0
					)
				),
				// 10000016
				If((cbm.MetricValue > cbm.MetricPlanValue), 1, 0), 
				// 10000017
				If(cbm.MetricValue = cbm.MetricPlanValue, 
					13, 
					If((cbm.MetricValue > cbm.Percentile75),
						1,
						0
					)
				),
				// 10000018
				If((cbm.MetricValue < cbm.MetricPlanValue), 
					1, 
					If((cbm.MetricValue > cbm.Percentile75),
						13,
						0
					)
				),
				// 10000019
				If((cbm.MetricValue < cbm.MetricPlanValue), 
					1, 
					If((cbm.MetricValue > cbm.Percentile75),
						13,
						0
					)
				),
				// 10000020
				If((cbm.MetricValue > cbm.Percentile75), 
					13, 
					If((cbm.MetricValue <= cbm.Percentile25) and ((cbm.Percentile25 <> 0) or (cbm.Percentile75 <> 0)),
						1,
						0
					)
				)
			)
		) as cbm.DeviationMarker,
		// Оценка результата
		If(not $(ggffIsEmpty(cbm.MetricValue)),
			Pick(Match(cbm.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019, 10000020),		
				// 10000015
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffPCT)')&
				'</b>. Цель - не меньше <b>'&Num(cbm.MetricPlanValue, '$(ggffPCT)')&
				'</b>. Ориентир - больше <b>'&Num(cbm.Percentile75, '$(ggffPCT)')&'</b>)',
				// 10000016
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffNUM)')&
				' шт.</b> Цель - не больше <b>'&Num(cbm.MetricPlanValue, '$(ggffNUM)')&' шт.</b>)',
				// 10000017
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffPCT)')&
				'</b>. Цель - не больше <b>'&Num(cbm.Percentile75, '$(ggffPCT)')&
				'</b>. Ориентир - <b>'&Num(cbm.MetricPlanValue, '$(ggffPCT)')&'</b>)',
				// 10000018
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffPCT)')&
				'</b>. Цель - не меньше <b>'&Num(cbm.MetricPlanValue, '$(ggffPCT)')&
				'</b>. Ориентир - больше <b>'&Num(cbm.Percentile75, '$(ggffPCT)')&'</b>)',
				// 10000019
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffPCT)')&
				'</b>. Цель - не меньше <b>'&Num(cbm.MetricPlanValue, '$(ggffPCT)')&
				'</b>. Ориентир - больше <b>'&Num(cbm.Percentile75, '$(ggffPCT)')&'</b>)',
				// 10000020
				'(Факт - <b>'&Num(cbm.MetricValue, '$(ggffPCT)')&
				'</b>. Цель - больше <b>'&Num(cbm.Percentile25, '$(ggffPCT)')&
				'</b>. Ориентир - больше <b>'&Num(cbm.Percentile75, '$(ggffPCT)')&'</b>)'
			)
		) as cbm.ResultEvaluation
	resident cbm_data;
	drop table cbm_data;
	rename table temp to cbm_data;
	drop fields cbm.Percentile75, cbm.Percentile25;

	//Добавляет параметры ГОСБ
	left join(cbm_data) load
		org_code,
		org_tb_code as cbm.TBCode,
		org_gosb_code as cbm.GOSBCode,
		org_tb_name as cbm.TBName,
		org_gosb_name as cbm.GOSBName
	resident org;

	////////////////////////////////////////////////////////////////////////////////
	// Данные с платформы

	// Справочник допустимых продуктов
	product_lookup:
	noconcatenate load * inline [
		product_id
		25
		101
		115
		162
		165
		166
		168
		169
		175
		176
		185
		220
		226
		227
		228
		229
		230
		231
		232
		233
		234
		235
	];

	// Считает число продуктов
	product_lookup_count:
	noconcatenate load Count(product_id) as product_count resident product_lookup;
	join(product_lookup) load product_count resident product_lookup_count;
	drop table product_lookup_count;

	// Получает продукты
	if '$(cbmConnection)' = '1' then
		//QVD
		products:
		noconcatenate load  
			id as product_id,
			// crm_id,
			name as product
			// dzo,
			// status,
			// segment,
			// industry as industry,
			// role_upr,
			// description,
			// visible,
			// create_date,
			// update_date,
			// draft,
			// tb,
			// gosb,
			// metric,
			// "group",
			// attachment,
			// "type",
			// consist
		from [$(fbs_prd_qvd)] (qvd)
		//Только тираж
		where (status = 'Тираж');

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		products:
		noconcatenate load 
		  // attachment,
			// consist,
			// create_date,
			// crm_id,
			// description,
			// draft,
			// dzo,
			// gosb,
			// "group",
			id as product_id,
			// industry as industry,
			// metric,
			name as product
			// role_upr,
			// segment,
			// status,
			// tb,
			// "type",
			// update_date,
			// visible
		from [$(fbs_prd_xl)] (ooxml, embedded labels, table is Sheet1)
		//Только тираж
		where (status = 'Тираж');

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет поля из загруженного справочника в справочник продуктов
	left join(product_lookup) load
		product_id,
		product
	resident products;
	drop table products;

	//Условия непустых записей
	set cbmNotEmptyRecords = 
		not(IsNull($1)) and ($1 <> '') and ($1 <> '-') and 
		not(IsNull($2)) and ($2 <> '') and ($2 <> '-') and 
		not(IsNull($3)) and ($3 <> '') and ($3 <> '-');

	//Проверяет квартал и год записи, прошлые ли это кварталы текущего года относительно текущего квартала: $1 - год, $2 - квартал
	set cbmIsPastQuarterOnlyThisYear = (($1 = Year('$(v_cbmToday)')) and ($2 < $(ggffQuarterNo('$(v_cbmToday)'))));
	//Проверяет квартал и год записи, текущий или будущие ли это кварталы текущего года относительно текущего: $1 - год, $2 - квартал
	set cbmIsThisAndFutureQuarterThisYear = (($1 = Year('$(v_cbmToday)')) and ($2 >= $(ggffQuarterNo('$(v_cbmToday)'))));
	//Проверяет квартал и год записи, прошлые ли это кварталы текущего года относительно текущего квартала
	//(весь прошлый год, если первый квартал): $1 - год, $2 - квартал
	set cbmIsPastQuarterThisAndPrevYear = 
		If($(ggffQuarterNo('$(v_cbmToday)')) = 1,
			($1 = Year('$(v_cbmToday)') - 1),
			(($1 = Year('$(v_cbmToday)')) and ($2 < $(ggffQuarterNo('$(v_cbmToday)'))))
		);
	//Проверяет квартал и год записи, прошлые ли это кварталы за всю историю относительно текущего квартала: $1 - год, $2 - квартал
	set cbmIsPastQuarterEver = (($1 < Year('$(v_cbmToday)')) or (($1 = Year('$(v_cbmToday)')) and ($2 < $(ggffQuarterNo('$(v_cbmToday)')))));
	//Проверяет квартал и год записи, прошлые ли это кварталы за всю историю относительтно предыдущего: $1 - год, $2 - квартал
	set cbmIsPrevPastQuarterEver = 
		If(($(ggffQuarterNo('$(v_cbmToday)')) > 2),
			// Сейчас 3 или 4 квартал: прошлые годы или этот, но запись старше предыдущего квартала
			(($1 < Year('$(v_cbmToday)')) or (($1 = Year('$(v_cbmToday)')) and ($2 < ($(ggffQuarterNo('$(v_cbmToday)')) - 1)))),
			If($(ggffQuarterNo('$(v_cbmToday)')) = 2,
				// Сейчас 2 квартал: прошлые годы 
				($1 < Year('$(v_cbmToday)')),
				// Сейчас 1 квартал: позапрошлные годы или прошлый, но запись старше 4 квартала
				(($1 < (Year('$(v_cbmToday)') - 1)) or (($1 = (Year('$(v_cbmToday)') - 1)) and ($2 < 4)))
			)
		);
	// Проверяет год записи, текущий ли это год: 1 - год
	set cbmIsThisYear = ($1 = Year('$(v_cbmToday)'));
	// Проверяет квартал записи, четвертый ли он текущего года: $1 - год, $2 - квартал
	set cbmIs4QThisYear = (($1 = Year('$(v_cbmToday)')) and ($2 = 4));
	// Проверяет, не ГЧП ли продукт: $1 - продукт
	set cbmIsNotGChP = (Left($1, 3) <> 'ГЧП');
	// Проверяет статус реализации
	set cbmIsRealised = (($1 = 134) or ($1 = 777));
	// Начало года
	set cbmYearStart = Date(YearStart('$(v_cbmToday)'));
	// Конец предыдущего квартала
	set cbmPrevQuarterEnd = Date(QuarterEnd(AddMonths('$(v_cbmToday)', -3)));
	// Даты от начала гола до конца предыдущего квартала
	set cbmPastQuarterOnlyThisYearDates = //$(cbmYearStart)&'-'&$(cbmPrevQuarterEnd);
		If($(cbmYearStart) < $(cbmPrevQuarterEnd),
			$(cbmYearStart)&'-'&$(cbmPrevQuarterEnd),
			'неприменимо'
		);
	// Начало текущего квартала
	set cbmThisQuarterStart = Date(QuarterStart('$(v_cbmToday)'));
	// Конец года
	set cbmYearEnd = Date(YearEnd('$(v_cbmToday)'));
	// Даты от начала текущего квартала до конца года
	set cbmThisAndFutureQuarterThisYearDates = $(cbmThisQuarterStart)&'-'&$(cbmYearEnd);

	//Получает данные
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_fbs:
		noconcatenate load
			// tb_code,
			// tb,
			// gosb_code,
			// gosb,
			$(ggffCreateOrgCode(tb_code, gosb_code)) as org_code,
			// "type",
			// basket_id,
			product as cbm_fbs.Product,
			// If(IsNull(city) or (city = '') or (city = '-'),
			// 	'ГОСБ',
			// 	city 
			// ) as cbm_fbs.City,
			// initiative_id,
			// chain,
			// object,
			// id_basket_item,
			If($(cbmIsPastQuarterOnlyThisYear("year", quarter)), "fact", 0) as cbm_fbs.FactPastQuarters,
			If($(cbmIsThisAndFutureQuarterThisYear("year", quarter)), plan, 0) as cbm_fbs.PlanThisAndFutureQuarters,
			If($(cbmIsThisYear("year")), plan, 0) as cbm_fbs.PlanThisYear,
			If($(cbmIs4QThisYear("year", quarter)), plan, 0) as cbm_fbs.Plan4QThisYear,
			If($(cbmIsPastQuarterThisAndPrevYear("year", quarter)) and $(cbmIsNotGChP(product)), income, 0) as cbm_fbs.IncomeFact,
			If($(cbmIsPastQuarterEver("year", quarter)) and $(cbmIsRealised(status)), "fact", 0) as cbm_fbs.Fact,
			If($(cbmIsPrevPastQuarterEver("year", quarter)) and $(cbmIsRealised(status)), "fact", 0) as cbm_fbs.PrevFact
			// "year",
			// quarter,
			// $(ggffGetDateFromQY(quarter, "year")) as cbm_fbs.Date,
			// status as cbm_fbs.Status,
			// income_plan as cbm_fbs.IncomePlan,
			// template_id as cbm_fbs.TemplateID,
  		// template_title as cbm_fbs.TemplateTitle,
			// "comment" as cbm_fbs.Comments,
			// // "max",
			// Date(create_date) as cbm_fbs.CreateDate,
			// Date(update_date) as cbm_fbs.UpdateDate
		from [$(fbs_qvd)] (qvd)
		//Только не пустые значения со статусом Запланировано или Реализовано 
		where $(cbmNotEmptyRecords(tb_code, gosb_code, product)) and 
			((status = 127) or (status = 128) or (status = 129) or (status = 130) or (status = 131) or (status = 134) or (status = 777));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		cbm_fbs:
		noconcatenate load 
			// tb_code,
			// tb,
			// gosb_code,
			// gosb,
			$(ggffCreateOrgCode(tb_code, gosb_code)) as org_code,
			// "type",
			// basket_id,
			product as cbm_fbs.Product,
			// If(IsNull(city) or (city = '') or (city = '-'),
			// 	'ГОСБ',
			// 	city 
			// ) as cbm_fbs.City,
			// initiative_id,
			// "max",
			// chain,
			// object,
			// id_basket_item,
			If($(cbmIsPastQuarterOnlyThisYear("year", quarter)), "fact", 0) as cbm_fbs.FactPastQuarters,
			If($(cbmIsThisAndFutureQuarterThisYear("year", quarter)), plan, 0) as cbm_fbs.PlanThisAndFutureQuarters,
			If($(cbmIsThisYear("year")), plan, 0) as cbm_fbs.PlanThisYear,
			If($(cbmIs4QThisYear("year", quarter)), plan, 0) as cbm_fbs.Plan4QThisYear,
			If($(cbmIsPastQuarterThisAndPrevYear("year", quarter)) and $(cbmIsNotGChP(product)), income, 0) as cbm_fbs.IncomeFact,
			If($(cbmIsPastQuarterEver("year", quarter)) and $(cbmIsRealised(status)), "fact", 0) as cbm_fbs.Fact,
			If($(cbmIsPrevPastQuarterEver("year", quarter)) and $(cbmIsRealised(status)), "fact", 0) as cbm_fbs.PrevFact
			// "year",
			// quarter,
			// $(ggffGetDateFromQY(quarter, "year")) as cbm_fbs.Date,
			// status as cbm_fbs.Status,
			// income_plan as cbm_fbs.IncomePlan,
			// If("comment" = '-', '', "comment") as cbm_fbs.Comments,
			// Date(create_date) as cbm_fbs.CreateDate,
			// Date(update_date) as cbm_fbs.UpdateDate,
			// template_id as cbm_fbs.TemplateID,
  		// template_title as cbm_fbs.TemplateTitle
		from [$(fbs_xl)] (ooxml, embedded labels, table is Sheet1)
		//Только не пустые значения со статусом Запланировано или Реализовано 
		where $(cbmNotEmptyRecords(tb_code, gosb_code, product)) and 
			((status = 127) or (status = 128) or (status = 129) or (status = 130) or (status = 131) or (status = 134) or (status = 777));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет к таблице данные из таблицы оргкодов
	left join (cbm_fbs) load 
		org_code,
		org_tb_code as cbm_fbs.TBCode,
		org_gosb_code as cbm_fbs.GOSBCode,
		org_tb_name as cbm_fbs.TBName,
		org_gosb_name as cbm_fbs.GOSBName,
		If(IsNull(org_cluster), 'Без группы', org_cluster) as cbm_fbs.Cluster
 	resident org;
	// drop table org;

	//Добавляет в основную таблицу ID и количество продуктов из справочника
	left join(cbm_fbs) load
		product as cbm_fbs.Product,
		product_id as cbm_fbs.ProductID,
		product_count as cbm_fbs.ProductCount
	resident product_lookup;
	drop table product_lookup;

	//Сливает записи по оргкоду
	//Убирает из таблицы записи с продуктами не из справочника
	temp:
	noconcatenate load *,
		cbm_fbs.Penetration - cbm_fbs.PrevPenetration as cbm_fbs.PenetrationGrowth;
	noconcatenate load 
		org_code,
		cbm_fbs.TBCode,
		cbm_fbs.GOSBCode,
		cbm_fbs.TBName,
		cbm_fbs.GOSBName,
		cbm_fbs.Cluster,
		Sum(cbm_fbs.FactPastQuarters) as cbm_fbs.FactPastQuarters,
		Sum(cbm_fbs.PlanThisAndFutureQuarters) as cbm_fbs.PlanThisAndFutureQuarters,
		Sum(cbm_fbs.Plan4QThisYear) as cbm_fbs.Plan4QThisYear,
		Sum(cbm_fbs.PlanThisYear) as cbm_fbs.PlanThisYear,
		Sum(cbm_fbs.IncomeFact) as cbm_fbs.IncomeFact,
		Count(distinct If(cbm_fbs.Fact > 0, cbm_fbs.Product)) / Only(cbm_fbs.ProductCount) as cbm_fbs.Penetration,
		Count(distinct If(cbm_fbs.PrevFact > 0, cbm_fbs.Product)) / Only(cbm_fbs.ProductCount) as cbm_fbs.PrevPenetration
	resident cbm_fbs
	where not(IsNull(cbm_fbs.ProductID)) and (org_code <> 3838) and (org_code <> 529052)
	group by org_code, cbm_fbs.TBCode, cbm_fbs.GOSBCode, cbm_fbs.TBName, cbm_fbs.GOSBName, cbm_fbs.Cluster;
	drop table cbm_fbs;
	rename table temp to cbm_fbs;

	////////////////////////////////////////////////////////////////////////////////

	// Выделяет таблицу метрики 10000021
	cbm_fbs_10000021:
	noconcatenate load * resident cbm_fbs;

	//Добавляет данные ориентира
	left join(cbm_fbs_10000021) load
    org_code,
		Sum(If(Year('$(v_cbmToday)') = 2023, "4 кв", 0)) as cbm_fbs.Milestone
		// Sum(Pick(Match($(ggffQuarterNo('$(v_cbmToday)'))&Year('$(v_cbmToday)'), '32023', '42023', '12024') + 1,
		// 	0, "2 кв", "3 кв", "4 кв"
		// )) as cbm_fbs.Milestone
		// Sum(Pick(Match($(ggffQuarterNo('10.02.2024'))&Year('10.02.2024'), '32023', '42023', '12024') + 1,
		// 	0, "2 кв", "3 кв", "4 кв"
		// )) as cbm_fbs.Milestone
	from [$(fbs_mls_xl)]
	(ooxml, embedded labels, table is Sheet1)
	where (org_code <> 3838) and (org_code <> 529052)
	group by org_code;

	// Получает значение метрики 10000021
	temp:
	noconcatenate load *,
		10000021 as cbm_fbs.MetricID,
		'Достаточность PL продаж продуктов полки' as cbm_fbs.MetricName,
		1 as cbm_fbs.MetricDirection,
		1.1 as cbm_fbs.MetricPlanValue,
		Null() as cbm_fbs.ElementType, 
		Null() as cbm_fbs.ElementID,
		'EXT_FILE' as cbm_fbs.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_fbs.ReportDate,
		'STUFF' as cbm_fbs.StructLevel,
		'1) Факт продаж продуктов полки ('&$(cbmPastQuarterOnlyThisYearDates)&') - '&cbm_fbs.FactPastQuarters&' шт. '&chr(13)&
		'2) PL продаж продуктов полки ('&$(cbmThisAndFutureQuarterThisYearDates)&') - '&cbm_fbs.PlanThisAndFutureQuarters&' шт. '&chr(13)&
		'3) Ориентир продаж - '&cbm_fbs.Milestone&' шт.'
		as cbm_fbs.DevElementName,
		If((cbm_fbs.Milestone > 0), 
			(cbm_fbs.FactPastQuarters + cbm_fbs.PlanThisAndFutureQuarters) / cbm_fbs.Milestone, 
			// Если нет ориентира, то выше границы плана
			'1,10'
		) as cbm_fbs.MetricValue,
		'10000021_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_fbs.LoadID
	resident cbm_fbs_10000021;
	drop table cbm_fbs_10000021;
	rename table temp to cbm_fbs_10000021;

	// Расчитывает значение перцентиля 0,75
	left join(cbm_fbs_10000021) load
		Fractile(cbm_fbs.MetricValue, 0.75) as cbm_fbs.Percentile75
	resident cbm_fbs_10000021
	where (cbm_fbs.MetricValue >= cbm_fbs.MetricPlanValue);

	// Добавляет поля ResultEvaluation и DeviationMarker
	temp:
	noconcatenate load *,
		'(Факт - <b>'&Num(cbm_fbs.MetricValue, '$(ggffPCT)')&
			'</b>. Цель - не меньше <b>'&Num(cbm_fbs.MetricPlanValue, '$(ggffPCT)')&
			'</b>. Ориентир - больше <b>'&Num(cbm_fbs.Percentile75, '$(ggffPCT)')&'</b>)' 
		as cbm_fbs.ResultEvaluation,
		If((cbm_fbs.MetricValue < cbm_fbs.MetricPlanValue), 
			1, 
			If((cbm_fbs.MetricValue > cbm_fbs.Percentile75),
				13,
				0
			)
		) as cbm_fbs.DeviationMarker
	resident cbm_fbs_10000021;
	drop table cbm_fbs_10000021;
	rename table temp to cbm_fbs_10000021;

	// Сливает данные метрики 10000021 с основной таблицей
	call cbmMergeMetric(10000021);

	////////////////////////////////////////////////////////////////////////////////

	// Выделяет таблицу метрики 10000022
	cbm_fbs_10000022:
	noconcatenate load * resident cbm_fbs;

	// Получает значение метрики 10000022
	temp:
	noconcatenate load *,
		'(Факт - <b>'&Num(cbm_fbs.MetricValue, '$(ggffPCD)')&
			'</b>. Цель - не больше <b>'&Num(cbm_fbs.MetricPlanValue, '$(ggffPCD)')&'</b>)' 
		as cbm_fbs.ResultEvaluation,
		If((cbm_fbs.MetricValue > cbm_fbs.MetricPlanValue), 1, 0) as cbm_fbs.DeviationMarker;
	noconcatenate load *,
		10000022 as cbm_fbs.MetricID,
		'Неравномерность плана продаж продуктов полки' as cbm_fbs.MetricName,
		2 as cbm_fbs.MetricDirection,
		0.6 as cbm_fbs.MetricPlanValue,
		Null() as cbm_fbs.ElementType, 
		Null() as cbm_fbs.ElementID,
		'EXT_FILE' as cbm_fbs.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_fbs.ReportDate,
		'STUFF' as cbm_fbs.StructLevel,
		'1) PL продаж продуктов полки на 4 кв. - '&cbm_fbs.Plan4QThisYear&' шт. '&chr(13)&
		'2) Годовой PL продаж продуктов полки - '&cbm_fbs.PlanThisYear&' шт.'
		as cbm_fbs.DevElementName,
		If((cbm_fbs.PlanThisYear > 0), 
			cbm_fbs.Plan4QThisYear / cbm_fbs.PlanThisYear,
			// Если нет годового плана
			0
		) as cbm_fbs.MetricValue,
		'10000022_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_fbs.LoadID
	resident cbm_fbs_10000022;
	drop table cbm_fbs_10000022;
	rename table temp to cbm_fbs_10000022;

	// Сливает данные метрики 10000022 с основной таблицей
	call cbmMergeMetric(10000022);

	////////////////////////////////////////////////////////////////////////////////

	// Выделяет таблицу метрики 10000023
	cbm_fbs_10000023:
	noconcatenate load * resident cbm_fbs;

	// Расчитывает значение перцентилей 0,75 и 0,25
	left join(cbm_fbs_10000023) load 
		cbm_fbs.Cluster,
		Fractile(cbm_fbs.IncomeFact, 0.75) as cbm_fbs.Percentile75,
		Fractile(cbm_fbs.IncomeFact, 0.25) as cbm_fbs.Percentile25
	resident cbm_fbs_10000023
	group by cbm_fbs.Cluster;

	// Получает значение метрики 10000023
	temp:
	noconcatenate load *,
		10000023 as cbm_fbs.MetricID,
		'Низкая доходность продаж продуктов полки управляющего' as cbm_fbs.MetricName,
		1 as cbm_fbs.MetricDirection,
		0 as cbm_fbs.MetricPlanValue,
		Null() as cbm_fbs.ElementType, 
		Null() as cbm_fbs.ElementID,
		'EXT_FILE' as cbm_fbs.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_fbs.ReportDate,
		'STUFF' as cbm_fbs.StructLevel,
		'1) Граница боттом 25% - '&cbm_fbs.Percentile25&' руб. '&chr(13)&
		'2) Граница топ 25% - '&cbm_fbs.Percentile75&' руб.'
		as cbm_fbs.DevElementName,
		cbm_fbs.IncomeFact as cbm_fbs.MetricValue,
		'10000023_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_fbs.LoadID,
		'(Факт - <b>'&Num(cbm_fbs.IncomeFact / 1000000, '$(ggffNUH)')&
			' млн руб.</b> Цель - больше <b>'&Num(cbm_fbs.Percentile25 / 1000000, '$(ggffNUH)')&
			' млн руб.</b> Ориентир - больше <b>'&Num(cbm_fbs.Percentile75 / 1000000, '$(ggffNUH)')&' млн руб.</b>)' 
		as cbm_fbs.ResultEvaluation,
		If((cbm_fbs.IncomeFact > cbm_fbs.Percentile75), 
			13, 
			If((cbm_fbs.IncomeFact <= cbm_fbs.Percentile25) and ((cbm_fbs.Percentile25 <> 0) or (cbm_fbs.Percentile75 <> 0)),
				1,
				0
			)
		) as cbm_fbs.DeviationMarker
	resident cbm_fbs_10000023;
	drop table cbm_fbs_10000023;
	rename table temp to cbm_fbs_10000023;

	// Сливает данные метрики 10000023 с основной таблицей
	call cbmMergeMetric(10000023);
	
	////////////////////////////////////////////////////////////////////////////////

	// Выделяет таблицу метрики 10000024
	cbm_fbs_10000024:
	noconcatenate load * resident cbm_fbs;

	// Расчитывает значение перцентилей 0,75 и 0,25
	left join(cbm_fbs_10000024) load 
		cbm_fbs.Cluster,
		Fractile(cbm_fbs.Penetration, 0.75) as cbm_fbs.Percentile75,
		Fractile(cbm_fbs.Penetration, 0.25) as cbm_fbs.Percentile25
	resident cbm_fbs_10000024
	group by cbm_fbs.Cluster;

	// Получает значение метрики 10000024
	temp:
	noconcatenate load *,
		10000024 as cbm_fbs.MetricID,
		'Низкая доля продаж продуктов полки управляющего' as cbm_fbs.MetricName,
		1 as cbm_fbs.MetricDirection,
		0 as cbm_fbs.MetricPlanValue,
		Null() as cbm_fbs.ElementType, 
		Null() as cbm_fbs.ElementID,
		'EXT_FILE' as cbm_fbs.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_fbs.ReportDate,
		'STUFF' as cbm_fbs.StructLevel,
		'1) Граница боттом 25% - '&Num(cbm_fbs.Percentile25, '#.0%', '.', '')&chr(13)&
		'2) Граница топ 25% - '&Num(cbm_fbs.Percentile75, '#.0%', '.', '') 
		as cbm_fbs.DevElementName,
		cbm_fbs.Penetration as cbm_fbs.MetricValue,
		'10000024_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_fbs.LoadID,
		'(Факт - <b>'&Num(cbm_fbs.Penetration, '$(ggffPCD)')&
			'</b>. Цель - больше <b>'&Num(cbm_fbs.Percentile25, '$(ggffPCD)')&
			'</b>. Ориентир - больше <b>'&Num(cbm_fbs.Percentile75, '$(ggffPCD)')&'</b>)' 
		as cbm_fbs.ResultEvaluation,
		If((cbm_fbs.Penetration > cbm_fbs.Percentile75), 
			13, 
			If((cbm_fbs.Penetration <= cbm_fbs.Percentile25) and ((cbm_fbs.Percentile25 <> 0) or (cbm_fbs.Percentile75 <> 0)),
				1,
				0
			)
		) as cbm_fbs.DeviationMarker
	resident cbm_fbs_10000024;
	drop table cbm_fbs_10000024;
	rename table temp to cbm_fbs_10000024;

	// Сливает данные метрики 10000024 с основной таблицей
	call cbmMergeMetric(10000024);

	////////////////////////////////////////////////////////////////////////////////

	// Выделяет таблицу метрики 10000025
	cbm_fbs_10000025:
	noconcatenate load * resident cbm_fbs;

	// Расчитывает значение перцентилей 0,5
	left join(cbm_fbs_10000025) load 
		cbm_fbs.Cluster,
		Fractile(cbm_fbs.Penetration, 0.5) as cbm_fbs.PenetrationPercentile50,
		Fractile(cbm_fbs.PenetrationGrowth, 0.5) as cbm_fbs.PenetrationGrowthPercentile50
	resident cbm_fbs_10000025
	group by cbm_fbs.Cluster;

	// Получает значение метрики 10000025
	temp:
	noconcatenate load *,
		10000025 as cbm_fbs.MetricID,
		'Низкий прирост доли продаж продуктов полки управляющего' as cbm_fbs.MetricName,
		1 as cbm_fbs.MetricDirection,
		0 as cbm_fbs.MetricPlanValue,
		Null() as cbm_fbs.ElementType, 
		Null() as cbm_fbs.ElementID,
		'EXT_FILE' as cbm_fbs.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_fbs.ReportDate,
		'STUFF' as cbm_fbs.StructLevel,
		'1) Фактическая доля продаж продуктов полки - '&Num(cbm_fbs.Penetration, '#.0%', '.', '')&chr(13)&
		'2) Медиана фактической доли продаж продуктов полки по кластеру - '&Num(cbm_fbs.PenetrationPercentile50, '#.0%', '.', '')&chr(13)&
		'3) Темп прироста доли продаж продуктов полки - '&Num(cbm_fbs.PenetrationGrowth * 100, '#.0пп', '.', '')&chr(13)&
		'4) Медиана темпа прироста фактической доли продаж продуктов полки по кластеру - '&Num(cbm_fbs.PenetrationGrowthPercentile50 * 100, '#.0пп', '.', '') 
		as cbm_fbs.DevElementName,
		cbm_fbs.PenetrationGrowth as cbm_fbs.MetricValue,
		'10000025_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_fbs.LoadID,
		'(Доля - <b>'&Num(cbm_fbs.Penetration, '$(ggffPCD)')&
			'</b>. Прирост доли <b>'&Num(cbm_fbs.PenetrationGrowth * 100, '$(ggffPPT)')&
			'</b>. Цель - доля больше <b>'&Num(cbm_fbs.PenetrationPercentile50, '$(ggffPCD)')&
			'</b> или прирост доли больше <b>'&Num(cbm_fbs.PenetrationGrowthPercentile50 * 100, '$(ggffPPT)')&
			'</b>. Ориентир - доля больше <b>'&Num(cbm_fbs.PenetrationPercentile50, '$(ggffPCD)')&
			'</b> и прирост доли больше <b>'&Num(cbm_fbs.PenetrationGrowthPercentile50 * 100, '$(ggffPPT)')&'</b>)'
		as cbm_fbs.ResultEvaluation,
		If((cbm_fbs.Penetration > cbm_fbs.PenetrationPercentile50) and (cbm_fbs.PenetrationGrowth > cbm_fbs.PenetrationGrowthPercentile50), 
			13, 
			If((cbm_fbs.Penetration <= cbm_fbs.PenetrationPercentile50) and (cbm_fbs.PenetrationGrowth <= cbm_fbs.PenetrationGrowthPercentile50) and 
				((cbm_fbs.PenetrationPercentile50 <> 0) or (cbm_fbs.PenetrationGrowthPercentile50 <> 0)),
				1,
				0
			)
		) as cbm_fbs.DeviationMarker
	resident cbm_fbs_10000025;
	drop table cbm_fbs_10000025;
	rename table temp to cbm_fbs_10000025;

	// Сливает данные метрики 10000025 с основной таблицей
	call cbmMergeMetric(10000025);
	drop table cbm_fbs;

	////////////////////////////////////////////////////////////////////////////////
	// Данные о посещаемости

	// Получает данные о посещаемости
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_trf:
		noconcatenate load
			// Date(Floor(dates)) as cbm_trf.Date,
			// title as cbm_trf.Role,
			duration as cbm_trf.Duration,
			$(ggffCreateOrgCode(tb_code, gosb_code)) as org_code
		from [$(trf_qvd)] (qvd)
		where (title = 'Управляющий ГОСБ') and 
			(Date(Floor(dates)) >= Date(Floor($(cbmGetPrevMStart)))) and 
			(Date(Floor(dates)) <= Date(Floor($(cbmGetPrevMEnd))));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		cbm_trf:
		noconcatenate load
			// Date(Floor(dates)) as cbm_trf.Date,
			// title as cbm_trf.Role,
			duration as cbm_trf.Duration,
			$(ggffCreateOrgCode(tb_code, gosb_code)) as org_code
		from [$(trf_xl)] (ooxml, embedded labels, table is Sheet1)
		where (title = 'Управляющий ГОСБ') and 
			(Date(Floor(dates)) >= Date(Floor($(cbmGetPrevMStart)))) and 
			(Date(Floor(dates)) <= Date(Floor($(cbmGetPrevMEnd))));

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет к таблице данные из таблицы оргкодов
	right join(cbm_trf) load
		org_code,
		org_tb_code as cbm_trf.TBCode,
		org_gosb_code as cbm_trf.GOSBCode,
		org_tb_name as cbm_trf.TBName,
		org_gosb_name as cbm_trf.GOSBName
	resident org 
	where Len(org_code) > 2;
	// drop table org;

	// Сливает данные по оргкоду
	temp:
	noconcatenate load
		org_code,
		cbm_trf.TBCode,
		cbm_trf.GOSBCode,
		cbm_trf.TBName,
		cbm_trf.GOSBName,
		Sum(cbm_trf.Duration) as cbm_trf.Duration
	resident cbm_trf
	group by org_code, cbm_trf.TBCode, cbm_trf.GOSBCode, cbm_trf.TBName, cbm_trf.GOSBName;
	drop table cbm_trf;
	rename table temp to cbm_trf;

	// Расчитывает значение перцентиля 0,75
	left join(cbm_trf) load 
		Fractile(cbm_trf.Duration, 0.75) as cbm_trf.Percentile75
	resident cbm_trf;

	//Получает таблицу управляющих из данных HR
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_trf_hr:
		noconcatenate load
			org_code,
			// Определяет, активен ли Управляющий ГОСБ
			("Таб. номер" <> -1) as cbm_trf_hr.IsActive
		from [$(trf_hr_qvd)] (qvd)
		//Загружает только Управляющих, не Председателей
		where not(IsNull(org_code)) and (org_code <> '') and (Len(org_code) > 2);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		cbm_trf_hr:
		noconcatenate load
			org_code,
			// Определяет, активен ли управляющий ГОСБ
			("Таб. номер" <> -1) as cbm_trf_hr.IsActive
		from [$(trf_hr_xl)] (ooxml, embedded labels, table is Sheet1)
		//Загружает только Управляющих, не Председателей
		where (org_code <> '') and (org_code <> '-') and (Len(org_code) > 2);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет в таблицу посещаемости данные об активности управляющих
	left join(cbm_trf) load
		org_code,
		cbm_trf_hr.IsActive as cbm_trf.IsActive
	resident cbm_trf_hr;
	drop table cbm_trf_hr;

	// Получает значение метрики
	temp:
	noconcatenate load *,
		'(Факт - <b>'&Interval(cbm_trf.MetricValue/(3600*24),'h:mm:ss')&'. Цель - больше 0'&
			'</b>. Ориентир - больше <b>'&Interval(cbm_trf.Percentile75/(3600*24),'h:mm:ss')&'</b>)' 
		as cbm_trf.ResultEvaluation;
	noconcatenate load *,
		10000035 as cbm_trf.MetricID,
		'Посещаемость платформы ПРБР' as cbm_trf.MetricName,
		1 as cbm_trf.MetricDirection,
		0 as cbm_trf.MetricPlanValue,
		Null() as cbm_trf.ElementType, 
		Null() as cbm_trf.ElementID,
		'EXT_FILE' as cbm_trf.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_trf.ReportDate,
		If(cbm_trf.IsActive, 'STUFF', 'NODATA') as cbm_trf.StructLevel,
		'https://sudirvpo.sigma.sbrf.ru/vpo-sp-qs/extensions/Infopanel/Infopanel.html?page=td&td_page=gf_other/trafcbm_monitor&org_code='&org_code as cbm_trf.DevElementName,
		If(cbm_trf.IsActive, cbm_trf.Duration, 0) as cbm_trf.MetricValue,
		// If(cbm_trf.IsActive, Interval(cbm_trf.Duration/(3600*24),'h:mm:ss')) as cbm_trf.MetricValue,
		// Interval(cbm_trf.Duration/(3600*24),'h:mm:ss') as cbm_trf.MetricValue,
		'10000035_'&Date($(cbmGetPrevMStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevMEnd), 'YYYYMMDD') as cbm_trf.LoadID,
		If(cbm_trf.IsActive, 
			If((cbm_trf.Duration > cbm_trf.Percentile75), 
				13, 
				If((cbm_trf.Duration <= 0),
					1,
					0
				)
			),
			// Если нет управляющего
			0
		) as cbm_trf.DeviationMarker
	resident cbm_trf;
	drop table cbm_trf;
	rename table temp to cbm_trf;

	// Сливает данные метрики с основной таблицей
	concatenate(cbm_data) load
		org_code,
		cbm_trf.TBCode as cbm.TBCode,
		cbm_trf.GOSBCode as cbm.GOSBCode,
		cbm_trf.TBName as cbm.TBName,
		cbm_trf.GOSBName as cbm.GOSBName,
		cbm_trf.MetricID as cbm.MetricID,
		cbm_trf.MetricName as cbm.MetricName,
		cbm_trf.MetricDirection as cbm.MetricDirection,
		cbm_trf.MetricPlanValue as cbm.MetricPlanValue,
		cbm_trf.ElementType as cbm.ElementType, 
		cbm_trf.ElementID as cbm.ElementID,
		cbm_trf.Segment as cbm.Segment,
		cbm_trf.ReportDate as cbm.ReportDate,
		cbm_trf.StructLevel as cbm.StructLevel,
		cbm_trf.DevElementName as cbm.DevElementName,
		cbm_trf.MetricValue as cbm.MetricValue,
		cbm_trf.ResultEvaluation as cbm.ResultEvaluation,
		cbm_trf.DeviationMarker as cbm.DeviationMarker,
		cbm_trf.LoadID as cbm.LoadID
	resident cbm_trf;
	drop table cbm_trf;

	////////////////////////////////////////////////////////////////////////////////
	// Данные AI-трансформации

	// Получает таблицу AI-трансформации
	if '$(cbmConnection)' = '1' then
		// QVD
		cbm_ai:
		noconcatenate load
			// iicom23.DATE,
			// iicom23.PRODUCT,
			Sum(iicom23.COMMIS) as cbm_ai.Income,
			// iicom23.DZO_NAME,
			org_code
			// If(IsNull(org_code) or (org_code = ''), 99, org_code) as org_code
		from [$(cbm_ai_qvd)] (qvd)
		// Без ЦА и Москвы
		where not(IsNull(org_code)) and (org_code <> '') and (org_code <> 3838)
		group by org_code;

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		// Excel
		cbm_ai:
		noconcatenate load
			// If((org_code = '') or (org_code = '-'), 99, org_code) as org_code,
			org_code,
			// iicom23.DATE,
			// iicom23.DZO_NAME,
			// iicom23.PRODUCT,
			Sum(iicom23.COMMIS) as cbm_ai.Income
		from [$(cbm_ai_xl)] (ooxml, embedded labels, table is Sheet1)
		// Без ЦА и Москвы
		where (org_code <> '') and (org_code <> '-') and (org_code <> 3838)
		group by org_code;

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Добавляет в таблицу матрицу оргкодов всех ГОСБ
	concatenate (cbm_ai) load org_code resident org where not(IsNull(org_gosb_code));
	// Сливает таблицу по org_code, оставляя нули у отсутствующих в данных ГОСБ
	temp:
	noconcatenate load 
		org_code,
		Sum(cbm_ai.Income) as cbm_ai.Income
	resident cbm_ai
	group by org_code;
	drop table cbm_ai;
	rename table temp to cbm_ai;

	// Добавляет к таблице данные из таблицы оргкодов
	left join (cbm_ai) load 
		org_code,
		org_tb_code as cbm_ai.TBCode,
		org_gosb_code as cbm_ai.GOSBCode,
		org_tb_name as cbm_ai.TBName,
		org_gosb_name as cbm_ai.GOSBName,
		If(IsNull(org_cluster), 'Без группы', org_cluster) as cbm_ai.Cluster
 	resident org;
	drop table org;

	// Расчитывает значение перцентилей 0,75 и 0,25
	left join(cbm_ai) load 
		cbm_ai.Cluster,
		Fractile(cbm_ai.Income, 0.75) as cbm_ai.Percentile75,
		Fractile(cbm_ai.Income, 0.25) as cbm_ai.Percentile25
	resident cbm_ai
	group by cbm_ai.Cluster;

	// Получает значение метрики 10000050
	temp:
	noconcatenate load *,
		10000050 as cbm_ai.MetricID,
		'Низкий доход от продаж продуктов с AI-трансформацией' as cbm_ai.MetricName,
		1 as cbm_ai.MetricDirection,
		0 as cbm_ai.MetricPlanValue,
		Null() as cbm_ai.ElementType, 
		Null() as cbm_ai.ElementID,
		'EXT_FILE' as cbm_ai.Segment,
		Date(Floor($(cbmGetPrevMEnd))) as cbm_ai.ReportDate,
		'STUFF' as cbm_ai.StructLevel,
		'1) Граница боттом 25% - '&cbm_ai.Percentile25&' руб. '&chr(13)&
		'2) Граница топ 25% - '&cbm_ai.Percentile75&' руб. ' 
		as cbm_ai.DevElementName,
		cbm_ai.Income as cbm_ai.MetricValue,
		'10000050_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD') as cbm_ai.LoadID,
		'(Факт - <b>'&Num(cbm_ai.Income / 1000, '$(ggffNUH)')&
			' тыс. руб.</b>. Цель - больше <b>'&Num(cbm_ai.Percentile25 / 1000, '$(ggffNUH)')&
			' тыс. руб.</b>. Ориентир - больше <b>'&Num(cbm_ai.Percentile75 / 1000, '$(ggffNUH)')&' тыс. руб.</b>)' 
		as cbm_ai.ResultEvaluation,
		If((cbm_ai.Income > cbm_ai.Percentile75), 
			13, 
			If((cbm_ai.Income <= cbm_ai.Percentile25) and ((cbm_ai.Percentile25 <> 0) or (cbm_ai.Percentile75 <> 0)),
				1,
				0
			)
		) as cbm_ai.DeviationMarker
	resident cbm_ai;
	drop table cbm_ai;
	rename table temp to cbm_ai;

	// Сливает данные метрики с основной таблицей
	concatenate(cbm_data) load
		org_code,
		cbm_ai.TBCode as cbm.TBCode,
		cbm_ai.GOSBCode as cbm.GOSBCode,
		cbm_ai.TBName as cbm.TBName,
		cbm_ai.GOSBName as cbm.GOSBName,
		cbm_ai.MetricID as cbm.MetricID,
		cbm_ai.MetricName as cbm.MetricName,
		cbm_ai.MetricDirection as cbm.MetricDirection,
		cbm_ai.MetricPlanValue as cbm.MetricPlanValue,
		cbm_ai.ElementType as cbm.ElementType, 
		cbm_ai.ElementID as cbm.ElementID,
		cbm_ai.Segment as cbm.Segment,
		cbm_ai.ReportDate as cbm.ReportDate,
		cbm_ai.StructLevel as cbm.StructLevel,
		cbm_ai.DevElementName as cbm.DevElementName,
		cbm_ai.MetricValue as cbm.MetricValue,
		cbm_ai.ResultEvaluation as cbm.ResultEvaluation,
		cbm_ai.DeviationMarker as cbm.DeviationMarker,
		cbm_ai.LoadID as cbm.LoadID
	resident cbm_ai;
	drop table cbm_ai;

	////////////////////////////////////////////////////////////////////////////////

	// Финальный шаблон метрик
	cbm_metrics_final_lookup:
	noconcatenate load * inline [
		cbm.MetricID, cbm.MetricShortName, cbm.Category
		10000015, PL КРП на тек. год, Проекты
		10000016, Идеи КРП > 60 дн., Проекты
		10000017, Доля нереал. идей КРП, Проекты
		10000018, Дост. КРП для вып. плана, Проекты
		10000019, PL КРП на след. год, Проекты
		10000020, Низкое кол-во идей КРП, Проекты
		10000021, Дост. PL продаж, Полка
		10000022, Неравн. плана продаж, Полка
		10000023, Низкая доход. продаж, Полка
		10000024, Низкая доля продаж, Полка
		10000025, Низкий прир. доли продаж, Полка
		10000035, Посещ. платф. ПРБР, Прочее
  ];

	// Добавляет финальный шаблон к таблице
	left join(cbm_data) load
		cbm.MetricID,
		cbm.MetricShortName, 
		cbm.Category
	resident cbm_metrics_final_lookup;
	drop table cbm_metrics_final_lookup;

end sub;

//Создает переменные и выражения
sub cbmSetVariables
	//Переменные
	let vOrgCode = 99;

	// Дэшборд аггрегированных отклонений

	//Выборка текущего оргкода
	set cbmCurOrgCode = 
		^(=If(^(vOrgCode) = 99, 
			'org_code = {*}',
			If(Len('^(vOrgCode)') = 2, 
				'org_tb_code = {^(=Left('^(vOrgCode)', 2))}',
				'org_code = {^(vOrgCode)}'
			)
		));
	let cbmCurOrgCode = Replace(cbmCurOrgCode, '^', '$');

	//Организационный уровень: 1 - СБ, 2 - ТБ, 3 - ГОСБ
	set cbmOrgLevel = If('^(vOrgCode)' = '99', 1, If(Len('^(vOrgCode)') = 2, 2, 3));
	let cbmOrgLevel = Replace(cbmOrgLevel, '^','$');

	//Измерения
	//Сбербанк
	set cbmGetSberbank = If('^(vOrgCode)' = '99', 'Сбербанк', org_tb_name_short);
	let cbmGetSberbank = Replace(cbmGetSberbank, '^','$');
	set cbmSberbankCond = '^(vOrgCode)' = '99';
	let cbmSberbankCond = Replace(cbmSberbankCond, '^','$');
	set cbmSberbankClass = 'total';
	set cbmSberbankActionCond = '^(vOrgCode)' <> '99';
	let cbmSberbankActionCond = Replace(cbmSberbankActionCond, '^','$');

	//ТБ
	set cbmGetTB = 
		If('^(vOrgCode)' = '99', 
			org_tb_name_short,
			If(Left('^(vOrgCode)', 2) = org_tb_code,
				org_tb_name_short
			)
		);
	let cbmGetTB = Replace(cbmGetTB, '^','$');
	set cbmTBCond = Len('^(vOrgCode)') = 2;
	let cbmTBCond = Replace(cbmTBCond, '^','$');
	set cbmTBClass = If(('^(vOrgCode)' <> '99') and (Len('^(vOrgCode)') = 2), 'total');
	let cbmTBClass = Replace(cbmTBClass, '^','$');
	set cbmTBActionOrgCode = If(^(vOrgCode) = org_tb_code, 99, org_tb_code);
	let cbmTBActionOrgCode = Replace(cbmTBActionOrgCode, '^','$');

	//ГОСБ
	set cbmGetGOSB =
		// Кроме Москвы и Крыма
		If((org_code <> 3838) and (org_code <> 529052),
			If('^(vOrgCode)' = '99', 
				org_gosb_name_short,
				If(Len('^(vOrgCode)') = 2, 
					if(Left('^(vOrgCode)', 2) = org_tb_code, 
						org_gosb_name_short
					),
					If('^(vOrgCode)' = org_code, 
						org_gosb_name_short
					)
				)
			)
		);
	let cbmGetGOSB = Replace(cbmGetGOSB, '^','$');
	set cbmGOSBCond = ('^(vOrgCode)' <> '99');
	let cbmGOSBCond = Replace(cbmGOSBCond, '^','$');
	set cbmGOSBClass = If(Len('^(vOrgCode)') > 2, 'total');
	let cbmGOSBClass = Replace(cbmGOSBClass, '^','$');
	set cbmGOSBActionOrgCode = If(^(vOrgCode) = org_code, org_tb_code, org_code);
	let cbmGOSBActionOrgCode = Replace(cbmGOSBActionOrgCode, '^','$');
	set cbmFlatGOSBActionOrgCode = If(^(vOrgCode) = org_code, 99, org_code);
	let cbmFlatGOSBActionOrgCode = Replace(cbmFlatGOSBActionOrgCode, '^','$');

	// Мера
	set cbmGetDeviationsTitle = 'Отклонения';
	set cbmGetDeviationsNum = Sum(If((cbm.StructLevel = 'STUFF') and (cbm.DeviationMarker = 1), 1, 0));
	set cbmGetDeviationsColor = If(Dimensionality() > 1, ^(ggffGetReverseGradientColor(1)));
	let cbmGetDeviationsColor = Replace(cbmGetDeviationsColor, '^','$');

	// Дэшборд отклонений по метрике
	for mi = 15 to 35
		// В таблицу
		set cbmGet$(mi)MetricTitle = Only({<cbm.MetricID = {100000$(mi)}>} cbm.MetricShortName);
		set cbmGet$(mi)DeviationMarker = 
			If(Dimensionality() = 0,
				Sum(Aggr(If(Only({<cbm.MetricID = {100000$(mi)}>} cbm.DeviationMarker) = 1, 1, 0), org_gosb_code)), 
				Only({<cbm.MetricID = {100000$(mi)}>} cbm.DeviationMarker)
			);
		set cbmGet$(mi)DeviationMarkerColor = 
			If(Dimensionality() <> 0,
				Pick(
					Match(Only({<cbm.MetricID = {100000$(mi)}>} cbm.DeviationMarker), 1, 0, 13) + 1,
						'$(ggffGrey)', '$(ggffRed)', '$(ggffGreen)', '$(ggffBlue)'
				)
			);
		// В подвал
		set cbmGet$(mi)MetricFullTitle = Only({<cbm.MetricID = {100000$(mi)}>} cbm.MetricName);
		set cbmGet$(mi)MetricValue = Only({<^(cbmCurOrgCode), cbm.MetricID = {100000$(mi)}>} cbm.ResultEvaluation);
		let cbmGet$(mi)MetricValue = Replace(cbmGet$(mi)MetricValue, '^','$');
		set cbmGet$(mi)DevElementName = 
			Only({<^(cbmCurOrgCode), cbm.StructLevel = {'STUFF'}, cbm.MetricID = {100000$(mi)}>} cbm.DevElementName);
		let cbmGet$(mi)DevElementName = Replace(cbmGet$(mi)DevElementName, '^','$');
	next mi;
	// Вес шрифта для итого
	set cbmGetTotalWeight = If(Dimensionality() = 0, '800', '');
	// Список комментариев
	set cbmGetComments = 
		'<p><b>'&^(cbmGet15MetricFullTitle)&'</b> '&^(cbmGet15DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet16MetricFullTitle)&'</b> '&^(cbmGet16DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet17MetricFullTitle)&'</b> '&^(cbmGet17DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet18MetricFullTitle)&'</b> '&^(cbmGet18DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet19MetricFullTitle)&'</b> '&^(cbmGet19DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet21MetricFullTitle)&'</b> '&^(cbmGet21DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet22MetricFullTitle)&'</b> '&^(cbmGet22DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet23MetricFullTitle)&'</b> '&^(cbmGet23DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet24MetricFullTitle)&'</b> '&^(cbmGet24DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet25MetricFullTitle)&'</b> '&^(cbmGet25DevElementName)&'</p>';
	let cbmGetComments = Replace(cbmGetComments, '^','$');
	// Список комментариев
	set cbmGetProjectComments = 
		'<p style="font-size: 20px; font-weight: 800; ">Проекты</p>'&
		'<p><b>'&^(cbmGet15MetricFullTitle)&'</b> '&^(cbmGet15MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet15DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet16MetricFullTitle)&'</b> '&^(cbmGet16MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet16DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet17MetricFullTitle)&'</b> '&^(cbmGet17MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet17DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet18MetricFullTitle)&'</b> '&^(cbmGet18MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet18DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet19MetricFullTitle)&'</b> '&^(cbmGet19MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet19DevElementName)&'</p>';
	let cbmGetProjectComments = Replace(cbmGetProjectComments, '^','$');
	// Список комментариев
	set cbmGetProductComments = 
		'<p style="font-size: 20px; font-weight: 800; ">Полка</p>'&
		'<p><b>'&^(cbmGet21MetricFullTitle)&'</b> '&^(cbmGet21MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet21DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet22MetricFullTitle)&'</b> '&^(cbmGet22MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet22DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet23MetricFullTitle)&'</b> '&^(cbmGet23MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet23DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet24MetricFullTitle)&'</b> '&^(cbmGet24MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet24DevElementName)&'</p>'&
		'<p><b>'&^(cbmGet25MetricFullTitle)&'</b> '&^(cbmGet25MetricValue)&'</p><p style="margin-left: 20px; ">'&^(cbmGet25DevElementName)&'</p>';
	let cbmGetProductComments = Replace(cbmGetProductComments, '^','$');
	// Количество отклонений по проектам
	set cbmGetProjectsDeviationsTitle = 'Отклонений по проектам';
	set cbmGetGOSBProjectsDeviationsNum = Count({<cbm.Category = {'Проекты'}, cbm.DeviationMarker = {1}>} distinct cbm.MetricName);
	set cbmGetTBProjectsDeviationsNum = Sum(Aggr(Count({<cbm.Category = {'Проекты'}, cbm.DeviationMarker = {1}>} distinct cbm.MetricName), org_gosb_code));
	set cbmGetProjectsDeviationsNum = If(Dimensionality() <> 0, ^(cbmGetGOSBProjectsDeviationsNum), ^(cbmGetTBProjectsDeviationsNum));
	let cbmGetProjectsDeviationsNum = Replace(cbmGetProjectsDeviationsNum, '^','$');
	// Ранг отклонений по проектам
	set cbmGetGOSBProjectsDeviationsRank = Rank(Aggr(^(cbmGetGOSBProjectsDeviationsNum), org_gosb_code), 1, 1);
	let cbmGetGOSBProjectsDeviationsRank = Replace(cbmGetGOSBProjectsDeviationsRank, '^','$');
	set cbmGetTBProjectsDeviationsRank = Rank(Aggr(^(cbmGetTBProjectsDeviationsNum), org_gosb_code, org_tb_code), 1, 1);
	let cbmGetTBProjectsDeviationsRank = Replace(cbmGetTBProjectsDeviationsRank, '^','$');
	set cbmGetProjectsDeviationsRank = If(Dimensionality() <> 0, ^(cbmGetGOSBProjectsDeviationsRank), ^(cbmGetTBProjectsDeviationsRank));
	let cbmGetProjectsDeviationsRank = Replace(cbmGetProjectsDeviationsRank, '^','$');
	// Количество отклонений по полке
	set cbmGetProductsDeviationsTitle = 'Отклонений по полке';
	set cbmGetGOSBProductsDeviationsNum = Count({<cbm.Category = {'Полка'}, cbm.DeviationMarker = {1}>} distinct cbm.MetricName);
	set cbmGetTBProductsDeviationsNum = Sum(Aggr(Count({<cbm.Category = {'Полка'}, cbm.DeviationMarker = {1}>} distinct cbm.MetricName), org_gosb_code));
	set cbmGetProductsDeviationsNum = If(Dimensionality() <> 0, ^(cbmGetGOSBProductsDeviationsNum), ^(cbmGetTBProductsDeviationsNum));
	let cbmGetProductsDeviationsNum = Replace(cbmGetProductsDeviationsNum, '^','$');
	// Ранг отклонений по полке
	set cbmGetGOSBProductsDeviationsRank = Rank(Aggr(^(cbmGetGOSBProductsDeviationsNum), org_gosb_code), 1, 1);
	let cbmGetGOSBProductsDeviationsRank = Replace(cbmGetGOSBProductsDeviationsRank, '^','$');
	set cbmGetTBProductsDeviationsRank = Rank(Aggr(^(cbmGetTBProductsDeviationsNum), org_gosb_code, org_tb_code), 1, 1);
	let cbmGetTBProductsDeviationsRank = Replace(cbmGetTBProductsDeviationsRank, '^','$');
	set cbmGetProductsDeviationsRank = If(Dimensionality() <> 0, ^(cbmGetGOSBProductsDeviationsRank), ^(cbmGetTBProductsDeviationsRank));
	let cbmGetProductsDeviationsRank = Replace(cbmGetProductsDeviationsRank, '^','$');
	
	// Количество отклонений всего
	set cbmGetTotalDeviationsTitle = 'Отклонений всего';
	set cbmGetTotalDeviationsNum = Column(7) + Column(13);
	// Сортировка ГОСБ
	set cbmGetGOSBOrder = ^(cbmGetProjectsDeviationsNum) + ^(cbmGetProductsDeviationsNum);
	let cbmGetGOSBOrder = Replace(cbmGetGOSBOrder, '^','$');
	
end sub;