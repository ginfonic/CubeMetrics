//CubeMetrics
//Сохраняет модель данных в QVD
sub cbmStoreModel(data_dir, qvd_dir, refs_dir, target, use_db)
	let cbmConnection = use_db;
	call cbmCreateModel('$(data_dir)/cbm_element.xlsx', '$(data_dir)/cbm_stuff.xlsx', '$(qvd_dir)/db_task.qvd', '$(data_dir)/rmx_tasks.xlsx', , '$(qvd_dir)/r.org.qvd', '$(refs_dir)/r.org.xlsx');
	exit sub unless ETL_STEP_ERROR_CODE = 0;
	call storeTemp('cbm_data', target&'_data');
	exit sub unless ETL_STEP_ERROR_CODE = 0;
	drop table cbm_data;
  $(mExitSubOnStepError);
end sub;

//Создает модель данных
sub cbmCreateModel(cbm_element_xl, cbm_stuff_xl, tasks_qvd, tasks_xl, org_qvd, org_xlsx)
	// Загружает Лешины таблицы
	
	// Таблица инициатив
	cbm_inic:
	noconcatenate load
		tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
		id as inic.ID,
		If((id = 3193) or (id = 2001), 'Региональные проекты', DIRECTION) as inic.Direction,
		title as inic.Title,
		Date(Date#(control_date, 'DD-MM-YYYY')) as inic.ControlDate,
		Date(Date#(create_date, 'DD-MM-YYYY')) as inic.CreateDate,
		STATUS as inic.Status,
		If((Upper(STATUS) = 'ЗАВЕРШЕНА') or (Upper(STATUS) = 'ОТМЕНЕНА'), 
			If((Upper(STATUS) = 'ОТМЕНЕНА') or (Month(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) >= 4),
				Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))),
				Year(Date(Date#(Left(comment, 10), 'DD-MM-YYYY'))) - 1
			), 
			Year(Now())
		) as inic.YearReport
	from [$(tasks_qvd)] (qvd)
	where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
		((Upper(STATUS) <> 'ОТМЕНЕНА') or ((Upper(STATUS) = 'ОТМЕНЕНА') and (cause = '3')));

	// Таблица отмененных инициатив
	cbm_inic_cancel:
	noconcatenate load
		tb_code&If(gosb_code = 0, '', If(gosb_code = 3838, 38, gosb_code)) as org_code,
		id as inic.ID,
		DIRECTION as inic.Direction,
		title as inic.Title,
		Date(Date#(control_date, 'DD-MM-YYYY') ) as inic.ControlDate,
		Date(Date#(create_date, 'DD-MM-YYYY') ) as inic.CreateDate,
		STATUS as inic.Status,
		Year(Now()) as inic.YearReport
	from [$(tasks_qvd)] (qvd)
	where (tb_code <> 38) and (gosb_code <> 9052) and (parent_id = 0) and 
		(Upper(STATUS) = 'ОТМЕНЕНА') and (DIRECTION = 'Бизнес идеи (КРП)');
 
	// Шаблон метрик
	cbm_metrics_lookup:
	noconcatenate load * Inline [
		inic.MetricID, inic.MetricTitle, inic.MetricDirection, inic.MetricPlanValue
		10000015, PL комплексных региональных проектов на текущий год, 1, 1.5
		10000016, Идеи КРП со сроком жизни больше 1 мес., 2, 0
		10000017, Доля нереализованных идей КРП, 2, 0
		10000018, Достаточность КПР для выполнения плана, 1, 1
		10000019, PL комплексных региональных проектов на следующий год, 1, 0.7
		10000020, Низкое количество идей КРП на ГОСБ, 1, 2
  ];

	// Добавляет метрики к таблице инициатив
	join(cbm_inic) load * 
	resident cbm_metrics_lookup
	where inic.MetricID <> 10000017;

	// Добавляет метрики к таблице отмененных инициатив
	join(cbm_inic_cancel) load * 
	resident cbm_metrics_lookup
	where inic.MetricID = 10000017;
	// drop table cbm_metrics_lookup;

	// Сливает таблицу отмененных инициатив с таблицей инициатив
	concatenate(cbm_inic) load *
	resident cbm_inic_cancel;
	drop table cbm_inic_cancel;

	// Загружает таблицу оргкодов
	if '$(cbmConnection)' = '1' then
		//QVD
		org:
		noconcatenate load distinct 
			org_code,
			org_tb_code,
			org_gosb_code,
			org_tb_name,
			org_gosb_name,
			org_cluster
		from [$(org_qvd)] (qvd)
		where (org_tb_code <> 38) and (org_gosb_code <> 9052);
	else
		//Excel
		org:
		noconcatenate load distinct 
			org_code,
			$(ggffT2N(org_tb_code)) as org_tb_code,
			$(ggffT2N(org_gosb_code)) as org_gosb_code,
			$(ggffT2N(org_tb_name)) as org_tb_name,
			$(ggffT2N(org_gosb_name)) as org_gosb_name,
			$(ggffT2N(org_cluster)) as org_cluster
		from [$(org_xlsx)] (ooxml, embedded labels, table is Sheet1)
		where (org_tb_code <> 38) and (org_gosb_code <> 9052);
	end if;

	// Добавляет кластер из таблицы оргкодов к таблице инициатив
	left join (cbm_inic) load
		org_code,
		If(IsNull(org_cluster), 'Без группы', org_cluster) as inic.Cluster
	resident org;

	// Создает матрицу ТБ/ГОСБ
	cbm_mtx:
	noconcatenate load 
		org_code as org_code_1,
		If(IsNull(org_cluster), 'Без группы', org_cluster) as inic.Cluster_1 
	resident org
	where not IsNull(org_tb_code);

	// Добавляет к ней метрики
	join(cbm_mtx) load 
		inic.MetricID as inic.MetricID_1, 
		inic.MetricTitle as inic.MetricTitle_1, 
		inic.MetricDirection as inic.MetricDirection_1, 
		inic.MetricPlanValue as inic.MetricPlanValue_1
	resident cbm_metrics_lookup;
	drop table cbm_metrics_lookup;

	// Убирает из матрицы неактуальные строки (20 метрика только по ТБ)
	temp:
	noconcatenate load * resident cbm_mtx
	where ((Len(org_code_1) > 2) and (inic.MetricID_1 <> 10000020)) or ((Len(org_code_1) = 2) and (inic.MetricID_1 = 10000020));
	drop table cbm_mtx;
	rename table temp to cbm_mtx;

	// // Команда
	// cbm_stuff:
	// noconcatenate load 
	// 	org_code,
	// 	inic.MetricID as stuff.MetricID,
	// 	inic.MetricTitle as stuff.MetricTitle,
	// 	// inic.TBCode as stuff.TBCode,
	// 	// If(inic.MetricID <> 10000020, inic.GOSBCode) as stuff.GOSBCode,
	// 	// stuff.MetricValue,
	// 	Pick(Match(inic.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019), 1.5, 0, 0, 1, 0.7) as stuff.ValueValue,
	// 	Today() as stuff.ReportDate,
	// 	// stuff.Comment,
	// 	'STUFF' as stuff.StructLevel,
	// 	inic.MetricDirection as stuff.MetricDirection,
	// 	'' as stuff.DevElementTitle,
	// 	// Вспомогательные поля
	// 	inic.Cluster as stuff.Cluster,
	// 	inic.ID as stuff.ID,
	// 	inic.Direction as stuff.Direction,
	// 	inic.Title as stuff.Title,
	// 	inic.ControlDate as stuff.ControlDate,
	// 	inic.CreateDate as stuff.CreateDate,
	// 	inic.Status as stuff.Status,
	// 	inic.YearReport as stuff.YearReport
	// resident cbm_inic;

	// // Элемент
	// cbm_elem:
	// noconcatenate load 
	// 	org_code,
	// 	inic.MetricID as elem.MetricID,
	// 	inic.MetricTitle as elem.MetricTitle,
	// 	// inic.TBCode as elem.TBCode,
	// 	// If(inic.MetricID <> 10000020, inic.GOSBCode) as elem.GOSBCode,
	// 	// elem.MetricValue,
	// 	Pick(Match(inic.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019), 1.5, 0, 0, 1, 0.7) as elem.ValueValue,
	// 	Today() as elem.ReportDate,
	// 	'' as elem.Comment,
	// 	'ELEMENT' as elem.StructLevel,
	// 	inic.MetricDirection as elem.MetricDirection,
	// 	// elem.DevElementTitle,
	// 	// Вспомогательные поля
	// 	inic.Cluster as elem.Cluster,
	// 	inic.ID as elem.ID,
	// 	inic.Direction as elem.Direction,
	// 	inic.Title as elem.Title,
	// 	inic.ControlDate as elem.ControlDate,
	// 	inic.CreateDate as elem.CreateDate,
	// 	inic.Status as elem.Status,
	// 	inic.YearReport as elem.YearReport
	// resident cbm_inic;

	// Объединенная
	temp:
	noconcatenate load 
		org_code,
		inic.MetricID,
		inic.MetricTitle,
		inic.MetricPlanValue,
		Today() as inic.ReportDate,
		'ELEMENT' as inic.StructLevel,
		inic.MetricDirection,
		// Заголовок элемента
		Pick(Match(inic.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019),
			//10000015
			If(((inic.Direction = 'Бизнес идеи (КРП)') or (inic.Direction = 'КРП')) and 
					((inic.Status = 'В работе') or (inic.Status = 'Завершена')) and 
					(inic.YearReport = '2023') and (inic.ControlDate < Date('02.02.2024')),
				inic.Direction & ': ' & inic.Title & ', срок: ' & inic.ControlDate & ', статус: ' & inic.Status
			),
			//10000016
			If((inic.Direction = 'Бизнес идеи (КРП)') and (inic.Status = 'В работе') and 
					(inic.YearReport = '2023') and (inic.ControlDate < Date('02.02.2024')) and 
					(inic.CreateDate < Date(Today() - 60)),
				inic.Title & ', дата создания: ' & inic.CreateDate & ' (в ожидании ' & (Today() - inic.CreateDate) & ' дн.)'),
			//10000017
			If((inic.Direction = 'Бизнес идеи (КРП)') and (inic.Status = 'Отменена') and 
					(inic.YearReport = '2023') and (inic.ControlDate < Date('02.02.2024')),
				inic.Direction & ': ' & inic.Title & ', срок: ' & inic.ControlDate & ', статус: ' & inic.Status),
			//10000018
			If((inic.Direction = 'КРП') and ((inic.Status = 'В работе') or (inic.Status = 'Завершена')) and 
					(inic.YearReport = '2023') and (inic.ControlDate < Date('02.02.2024')),
				inic.Direction & ': '& inic.Title & ', срок: ' & inic.ControlDate & ', статус: ' & inic.Status),
			//10000019
			If(((inic.Direction = 'Бизнес идеи (КРП)') or (inic.Direction = 'КРП')) and 
					((inic.Status = 'В работе') or (inic.Status = 'Завершена')) and 
					(inic.YearReport = '2023') and (inic.ControlDate > Date('02.02.2024')) and (inic.ControlDate < Date('02.02.2025')),
				inic.Direction & ': ' & inic.Title & ', срок: ' & inic.ControlDate & ', статус: ' & inic.Status)
		) as inic.DevElementTitle,
		// Вспомогательные поля
		inic.Cluster,
		inic.ID,
		inic.Direction,
		inic.Title,
		inic.ControlDate,
		inic.CreateDate,
		inic.Status,
		inic.YearReport
	resident cbm_inic;
	drop table cbm_inic;
	rename table temp to cbm_inic;

	// Ориентир, исходя из кластера ГОСБ
	set cbmGetClusterMilestone = Pick(Match(inic.Cluster, 'Группа 1', 'Группа 2', 'Группа 3', 'Группа 4') + 1, 1, 4, 3, 2, 1);

	// Группирует по оргкоду с кластером, метрике с дополнениями и получает таблицу команды
	cbm_stuff:
	noconcatenate load
		org_code as org_code_1, 
		inic.MetricID as inic.MetricID_1,
		inic.MetricTitle as inic.MetricTitle_1, 
		inic.MetricDirection as inic.MetricDirection_1, 
		inic.MetricPlanValue as inic.MetricPlanValue_1, 
		inic.Cluster as inic.Cluster_1,
		// Значение метрики
		Pick(Match(inic.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019, 10000020),
			//10000015
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				((inic.Direction = 'КРП') or (inic.Direction = 'Бизнес идеи (КРП)') or (inic.Direction = 'Бизнес-эксперименты')) and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000016
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'Бизнес идеи (КРП)') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024') and 
				(inic.CreateDate = Date(Today() - 60)),
				inic.ID
			)),
			//10000017
			Count(If(
				(inic.Status = 'Отменена') and
				(inic.Direction = 'Бизнес идеи (КРП)') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000018
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000019
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				((inic.Direction = 'КРП') or (inic.Direction = 'Бизнес идеи (КРП)')) and
				(inic.YearReport = 2023) and
				((inic.ControlDate >= '02.02.2024') or (inic.ControlDate < '02.02.2025')),
				inic.ID
			)) /
			$(cbmGetClusterMilestone),
			//10000020
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				((inic.Direction = 'КРП') or (inic.Direction = 'Бизнес идеи (КРП)')) and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) /
			// Считает только коды ГОСБ
			Count(If(Len(org_code) > 2, org_code))
		) as inic.MetricValue_1,
		// Комментарий
		Pick(Match(inic.MetricID, 10000015, 10000016, 10000017, 10000018, 10000019, 10000020),
			//10000015
			'1)	Количество идей КРП на текущий год: ' &
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'Бизнес идеи (КРП)') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП, реализуемых в текущем году: ' &
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'3)	Ориентир КРП на текущий год: ' & $(cbmGetClusterMilestone) &' шт.',
			//10000016
			Null(),
			//10000017
			Null(),
			//10000018
			'1)	Количество КРП, реализуемых в текущем году: ' &
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП завершенных в текущем году: ' &
			Count(If(
				(inic.Status = 'Завершена') and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'3)	Ориентир КРП на текущий год: ' & $(cbmGetClusterMilestone) &' шт.',
			//10000019
			'1)	Количество идей КРП на следующий год: ' &
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'Бизнес идеи (КРП)') and
				(inic.YearReport = 2023) and
				((inic.ControlDate >= '02.02.2024') or (inic.ControlDate < '02.02.2025')),
				inic.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП, реализуемых в следующем году: ' &
			Count(If(
				(inic.Status = 'В работе') and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				((inic.ControlDate >= '02.02.2024') or (inic.ControlDate < '02.02.2025')),
				inic.ID
			)) & ' шт. '& chr(13) &
			'3)	План КРП на текущий год: ' & 
			$(cbmGetClusterMilestone) & ' шт. (считаем, что план на следующий год равен текущему)',
			//10000020
			'1)	Количество идей КРП на текущий год: ' &
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				(inic.Direction = 'Бизнес идеи (КРП)') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'2)	Количество КРП в текущем году в статусе реализуется и завершена: '&
			Count(If(
				((inic.Status = 'Завершена') or (inic.Status = 'В работе')) and
				(inic.Direction = 'КРП') and
				(inic.YearReport = 2023) and
				(inic.ControlDate < '02.02.2024'),
				inic.ID
			)) & ' шт. '& chr(13) &
			'3)	ГОСБ: ' & 
			Count(If(Len(org_code) > 2, org_code)) & ' шт.'
		) as inic.Comment_1
	resident cbm_inic
	where ((Len(org_code) > 2) and (inic.MetricID <> 10000020)) or ((Len(org_code) = 2) and (inic.MetricID = 10000020))
	group by org_code, inic.MetricID, inic.MetricTitle, inic.MetricDirection, inic.MetricPlanValue, inic.Cluster;

	// Добавляет к таблице команды матрицу
	concatenate(cbm_stuff) load * resident cbm_mtx;
	drop table cbm_mtx;

	// Сливает таблицу с матрицей
	temp:
	noconcatenate load
		org_code_1, 
		inic.MetricID_1, 
		inic.MetricTitle_1, 
		inic.MetricDirection_1, 
		inic.MetricPlanValue_1, 
		inic.Cluster_1,
		Sum(inic.MetricValue_1) as inic.MetricValue_1,
		Concat(inic.Comment_1, '') as inic.Comment_1
	resident cbm_stuff
	group by org_code_1, inic.MetricID_1, inic.MetricTitle_1, inic.MetricDirection_1, inic.MetricPlanValue_1, inic.Cluster_1;
	drop table cbm_stuff;
	rename table temp to cbm_stuff;

	// Добавляет в таблицу элементов расчитанное значение метрики
	left join(cbm_inic) load
		org_code_1 as org_code,
		inic.MetricID_1 as inic.MetricID,
		inic.MetricValue_1 as inic.MetricValue
	resident cbm_stuff;

	// Сливает таблицу команды с таблицей элементов
	concatenate(cbm_inic) load
		org_code_1 as org_code,
		inic.MetricID_1 as inic.MetricID, 
		inic.MetricTitle_1 as inic.MetricTitle, 
		inic.MetricDirection_1 as inic.MetricDirection, 
		inic.MetricPlanValue_1 as inic.MetricPlanValue, 
		inic.MetricValue_1 as inic.MetricValue,
		inic.Comment_1 as inic.Comment,
		'STUFF' as inic.StructLevel
	resident cbm_stuff;
	drop table cbm_stuff;

	//////////////////////////////////////////////////////////////////////////////////

	// Получает элементы
	if '$(cbmConnection)' = '1' then
		//QVD
		cbm_data:
		noconcatenate load
			METRIC_ID,
			METRIC_NAME,
			TB_ID,
			GOSB_ID,
			METRIC_VALUE as METRIC_VALUE_1,
			METRIC_PLAN_VALUE as METRIC_PLAN_VALUE_1,
			REPORT_DATE as REPORT_DATE_1,
			STRUCT_LEVEL,
			DEV_ELEMENT_NAME
		from [$(cbm_element_xl)] (qvd);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		cbm_data:
		noconcatenate load
			METRIC_ID,
			METRIC_NAME,
			TB_ID,
			GOSB_ID,
			METRIC_VALUE as METRIC_VALUE_1,
			METRIC_PLAN_VALUE as METRIC_PLAN_VALUE_1,
			REPORT_DATE as REPORT_DATE_1,
			STRUCT_LEVEL,
			DEV_ELEMENT_NAME
		from [$(cbm_element_xl)] (ooxml, embedded labels, table is Sheet1);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Получает команду
	if '$(cbmConnection)' = '1' then
		//QVD
		concatenate(cbm_data) load
			METRIC_ID,
			METRIC_NAME,
			TB_ID,
			GOSB_ID,
			METRIC_VALUE as METRIC_VALUE_1,
			METRIC_PLAN_VALUE as METRIC_PLAN_VALUE_1,
			REPORT_DATE as REPORT_DATE_1,
			"COMMENT" as DEV_ELEMENT_NAME,
			STRUCT_LEVEL,
			METRIC_DIRECT as METRIC_DIRECT_1
		from [$(cbm_stuff_xl)] (qvd);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	else
		//Excel
		concatenate(cbm_data) load
			METRIC_ID,
			METRIC_NAME,
			TB_ID,
			GOSB_ID,
			METRIC_VALUE as METRIC_VALUE_1,
			METRIC_PLAN_VALUE as METRIC_PLAN_VALUE_1,
			REPORT_DATE as REPORT_DATE_1,
			"COMMENT" as DEV_ELEMENT_NAME,
			STRUCT_LEVEL,
			METRIC_DIRECT as METRIC_DIRECT_1
		from [$(cbm_stuff_xl)] (ooxml, embedded labels, table is Sheet1);

		call setStepError('$(#ScriptError)', '$(ScriptError)', ScriptErrorDetails);
		exit sub unless ETL_STEP_ERROR_CODE = 0;
	end if;

	// Расчитывает значение перцентилей 0,75 и 0,25
	left join(cbm_data) load
		METRIC_ID,
		Fractile(METRIC_VALUE_1, 0.75) as PERCENTILE75,
		Fractile(METRIC_VALUE_1, 0.25) as PERCENTILE25
	resident cbm_data
	where (
		(STRUCT_LEVEL = 'STUFF') and 
		(
			((METRIC_ID = 10000015) and (METRIC_VALUE_1 >= 1.5)) or 
			((METRIC_ID = 10000017) and (METRIC_VALUE_1 > 0)) or 
			((METRIC_ID = 10000018) and (METRIC_VALUE_1 >= 1)) or 
			((METRIC_ID = 10000019) and (METRIC_VALUE_1 >= 0.7)) or
			(METRIC_ID = 10000020)
		)
	)
	group by METRIC_ID;

	// Выражения расчета необходимых дат
	set cbmGetPrevMStart = MonthStart(AddMonths(REPORT_DATE_1, -1));
	set cbmGetPrevMEnd = MonthEnd(AddMonths(REPORT_DATE_1, -1));
	set cbmGetPrevQStart = QuarterStart(AddMonths(REPORT_DATE_1, -3));
	set cbmGetPrevQEnd = QuarterEnd(AddMonths(REPORT_DATE_1, -3));

	temp:
	noconcatenate load *,
	// Добавляет пустые и стандартные поля
	'' as ELEMENT_TYPE, 
	'' as ELEMENT_ID,
	'EXT_FILE' as SEGMENT ,
	// Добавляет поле LOAD_ID из метрики и даты отчета
	If((METRIC_ID = 10000018) or (METRIC_ID = 10000019),
		METRIC_ID&'_'&Date($(cbmGetPrevQStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevQEnd), 'YYYYMMDD'),
		METRIC_ID&'_'&Date($(cbmGetPrevMStart), 'YYYYMMDD')&'_'&Date($(cbmGetPrevMEnd), 'YYYYMMDD')
	) as LOAD_ID, 
	// Рассчитывает поле DEVIATION_MARKER
	If(not $(ggffIsEmpty(METRIC_VALUE_1)),
		Pick(Match(METRIC_ID, 10000015, 10000016, 10000017, 10000018, 10000019, 10000020), 
			// 10000015
			If(METRIC_VALUE_1 < 1.5, 
				1, 
				If(METRIC_VALUE_1 >= PERCENTILE75,
					13,
					0
				)
			),
			// 10000016
			If(METRIC_VALUE_1 > 0, 1, 0), 
			// 10000017
			If(METRIC_VALUE_1 = 0, 
				13, 
				If(METRIC_VALUE_1 >= PERCENTILE75,
					1,
					0
				)
			),
			// 10000018
			If(METRIC_VALUE_1 < 1, 
				1, 
				If(METRIC_VALUE_1 >= PERCENTILE75,
					13,
					0
				)
			),
			// 10000019
			If(METRIC_VALUE_1 < 0.7, 
				1, 
				If(METRIC_VALUE_1 >= PERCENTILE75,
					13,
					0
				)
			),
			// 10000020
			If(METRIC_VALUE_1 >= PERCENTILE75, 
				13, 
				If(METRIC_VALUE_1 <= PERCENTILE25,
					1,
					0
				)
			))
		) as DEVIATION_MARKER_1,
	Date(Floor($(cbmGetPrevMEnd))) as REPORT_DATE,
	TB_ID&GOSB_ID as ORG_CODE
	resident cbm_data;
	drop table cbm_data;
	rename table temp to cbm_data;
	drop fields PERCENTILE75, PERCENTILE25, REPORT_DATE_1;

	//Добавляет параметры ГОСБ
	left join(cbm_data) load
		// gosb.TBCode as TB_ID,
		// gosb.GOSBCode as GOSB_ID,
		org_code as ORG_CODE,
		org_tb_name as TB_NAME,
		org_gosb_name as GOSB_NAME
	resident org;
	drop table org;

	// Заполняет пустые поля из таблицы Elements данными из Stuff
	left join(cbm_data) load 
		REPORT_DATE,
		ORG_CODE,
		METRIC_ID,
		Max(METRIC_VALUE_1) as METRIC_VALUE,
		Max(METRIC_PLAN_VALUE_1) as METRIC_PLAN_VALUE,
		Max(METRIC_DIRECT_1) as METRIC_DIRECT,
		Max(DEVIATION_MARKER_1) as DEVIATION_MARKER
	resident cbm_data
	group by REPORT_DATE, ORG_CODE, METRIC_ID;
	drop fields METRIC_VALUE_1, METRIC_PLAN_VALUE_1, METRIC_DIRECT_1, DEVIATION_MARKER_1, ORG_CODE;

	// //Сохраняет таблицы
	// for I=15 to 20
	// 	cbm_data_$(I):
	// 	noconcatenate load * resident cbm_data where METRIC_ID = '100000'&$(I);
	// 	store cbm_data_$(I) into [lib://Data/cbm_out_$(I).csv] (TXT);
	// 	drop table cbm_data_$(I);
	// next;
end sub;

//Создает переменные и выражения
sub cbmSetVariables
	//Переменные
	let vOrgCode = 99;
end sub;